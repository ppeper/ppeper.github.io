{"version":3,"file":"component---src-templates-post-jsx-6f6fe41f19523195c582.js","mappings":"gMAuDA,UA9CaA,IAAe,IAAd,KAAEC,GAAMD,EACpB,MAAME,EAAOD,EAAKE,gBACZ,SAAEC,EAAQ,KAAEC,EAAI,WAAEC,GAAeL,GAEjC,MAAEM,EAAK,KAAEC,EAAI,OAAEC,EAAM,KAAEC,EAAI,OAAEC,GAAWT,EAAKU,aAC7C,QAAEC,GAAYX,GACd,YAAEY,EAAW,KAAEC,GAASb,EAAKc,OAEnC,IAAIC,EAAiB,GAiBrB,OAhBe,OAAXN,IACFM,EAAiBX,EAAWY,MAAMC,IAAIC,GAChCA,EAAWC,KAAKC,KAAOpB,EAAKoB,GAC9BC,OAAAC,OAAA,GACKJ,EAAWC,KAAK,CACnBI,aAAa,IAGfF,OAAAC,OAAA,GACKJ,EAAWC,KAAK,CACnBI,aAAa,MAOnBC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAG,CAACrB,MAAOA,EAAOsB,YAAahB,EAASiB,IAAG,GAAKC,EAAAA,QAAUhB,IAC3DW,EAAAA,cAACM,EAAAA,EAAO,KACNN,EAAAA,cAACM,EAAAA,EAAQC,OAAM,CACb1B,MAAOA,EACPC,KAAMA,EACNC,OAAQA,EACRC,KAAMA,EACNwB,UAAWC,KAAKC,MAAMtB,EAAYuB,WAEnCpB,EAAeqB,OAAS,GACvBZ,EAAAA,cAACM,EAAAA,EAAQO,OAAM,CAACC,OAAQ7B,EAAQA,OAAQM,IAE1CS,EAAAA,cAACM,EAAAA,EAAQS,KAAI,CAACC,KAAMxC,EAAKwC,OACzBhB,EAAAA,cAACM,EAAAA,EAAQW,OAAM,CAACvC,SAAUA,EAAUC,KAAMA,M","sources":["webpack://gatsby-starter-hoodie/./src/templates/Post.jsx"],"sourcesContent":["import React from \"react\"\nimport SEO from \"components/SEO\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"components/Layout\"\nimport Article from \"components/Article\"\n\nimport { siteUrl } from \"../../blog-config\"\n\nconst Post = ({ data }) => {\n  const post = data.markdownRemark\n  const { previous, next, seriesList } = data\n\n  const { title, date, update, tags, series } = post.frontmatter\n  const { excerpt } = post\n  const { readingTime, slug } = post.fields\n\n  let filteredSeries = []\n  if (series !== null) {\n    filteredSeries = seriesList.edges.map(seriesPost => {\n      if (seriesPost.node.id === post.id) {\n        return {\n          ...seriesPost.node,\n          currentPost: true,\n        }\n      } else {\n        return {\n          ...seriesPost.node,\n          currentPost: false,\n        }\n      }\n    })\n  }\n\n  return (\n    <Layout>\n      <SEO title={title} description={excerpt} url={`${siteUrl}${slug}`} />\n      <Article>\n        <Article.Header\n          title={title}\n          date={date}\n          update={update}\n          tags={tags}\n          minToRead={Math.round(readingTime.minutes)}\n        />\n        {filteredSeries.length > 0 && (\n          <Article.Series header={series} series={filteredSeries} />\n        )}\n        <Article.Body html={post.html} />\n        <Article.Footer previous={previous} next={next} />\n      </Article>\n    </Layout>\n  )\n}\n\nexport default Post\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $series: String\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 200, truncate: true)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        update(formatString: \"MMMM DD, YYYY\")\n        tags\n        series\n      }\n      fields {\n        slug\n        readingTime {\n          minutes\n        }\n      }\n    }\n    seriesList: allMarkdownRemark(\n      sort: { order: ASC, fields: [frontmatter___date] }\n      filter: { frontmatter: { series: { eq: $series } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["_ref","data","post","markdownRemark","previous","next","seriesList","title","date","update","tags","series","frontmatter","excerpt","readingTime","slug","fields","filteredSeries","edges","map","seriesPost","node","id","Object","assign","currentPost","React","Layout","SEO","description","url","siteUrl","Article","Header","minToRead","Math","round","minutes","length","Series","header","Body","html","Footer"],"sourceRoot":""}