{"componentChunkName":"component---src-templates-post-jsx","path":"/android-acc/","result":{"data":{"site":{"siteMetadata":{"title":"ppeper🥤"}},"markdownRemark":{"id":"cc73ab05-b427-563d-82a2-220a8c3fedb6","excerpt":"안드로이드 앱 개발을 시작하면 Activity에 거의 모든 동작하는 코드 를 직접 넣는다. 이렇게 모든 코드를 넣다보면 구조화된 코드의 작성이 없게되고 추후에 유지 보수 가 어려워진다. 처음 안드로이드 프로젝트를 진행하면서 기능을 바꾸거나 추가할 때 어느 부분을 수정해야하는지 굉장히 난해했던 경험이 있었고 자연스럽게 디자인 패턴을 공부를 하고 적용을 해봐…","html":"<img src='https://user-images.githubusercontent.com/63226023/151594101-266890b7-079a-47c5-9daa-2afbc335ccb7.png'>\n<p>안드로이드 앱 개발을 시작하면 <strong>Activity에 거의 모든 동작하는 코드</strong> 를 직접 넣는다. 이렇게 모든 코드를 넣다보면 <strong>구조화된 코드의 작성이 없게되고 추후에 유지 보수</strong> 가 어려워진다.</p>\n<p>처음 안드로이드 프로젝트를 진행하면서 <strong>기능을 바꾸거나 추가할 때 어느 부분을 수정해야하는지</strong> 굉장히 난해했던 경험이 있었고 자연스럽게 디자인 패턴을 공부를 하고 적용을 해봐야겠다는 생각이 들었다.😎 </p>\n<p align='center'><img src='https://user-images.githubusercontent.com/63226023/151658824-a9a66cb5-dadb-4931-b03a-eba217a1c345.png' width='70%'></p>\n<blockquote>\n<p>이렇게 모든 동작들을 하나의 Acitivity에 넣다보면 스파게티 코드가 된다...</p>\n</blockquote>\n<p>다행이 구글에서 <code class=\"language-text\">Jetpack</code>을 출시하여 <strong>안드로이드 아키텍쳐 컴포넌트(ACC)</strong> 를 포함하여 <strong>MVVM 패턴</strong> 에 따른 앱 개발을 하도록 제공하고 있다.<br>\n이번 포스팅은 <strong>안드로이드 아키첵처 컴포넌트(ACC)</strong> 와 <strong>MVVM 패턴</strong> 에 대해 정리를 해보려고 한다.</p>\n<hr>\n<h1 id=\"-MVC-vs-MVVM\" style=\"position:relative;\"><a href=\"#-MVC-vs-MVVM\" aria-label=\" MVC vs MVVM permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>📍 MVC vs MVVM</h1>\n<p>MVVM 디자인 패턴을 알아보기 전에 이전에 사용하던 MVC 패턴을 알아보자!</p>\n<p>MVC 패턴은 <strong>Model-View-Controller</strong> 의 약자로 기능별로 나타내면 다음과 같다.</p>\n<ul>\n<li>Model : Data와 관련한 처리를 한다.</li>\n<li>View : Controller로 부터 알림을 받고, Model을 참조하여 사용자가 볼 화면을 구성한다.</li>\n<li>Controller : 사용자의 입력을 받는다.</li>\n</ul>\n<img src='https://user-images.githubusercontent.com/63226023/151660484-18f2e9c3-8733-46b2-ac8a-9e9c89a054d4.png'>\n<blockquote>\n<ol>\n<li><strong>Controller</strong> 는 사용자의 입력을 받는다.   </li>\n<li>Controller는 입력에 따라서 <strong>Model의 갱신</strong> 을 요청한다.</li>\n<li><strong>View</strong> 는 <strong>Model을 참조</strong> 하여 <strong>사용자가 볼 화면(UI)를 업데이트</strong> 한다.</li>\n</ol>\n</blockquote>\n<p>안드로이드에서는 <strong>Controller</strong> 의 역할과 <strong>View</strong> 의 역할을 함께하게 된다(OnClickListener 등). 따라서 기존의 단순한 형태의 MVC 패턴에 따른 Activity에 모든 코드를 넣으면 이런 단점들이 발생하였다.</p>\n<ul>\n<li>앱에 기능을 추가할때 마다 <strong>Activity의 코드양이 많아짐</strong></li>\n<li><strong>View와 Model 간의 결합도</strong> 가 높아짐</li>\n<li><strong>코드 복잡도</strong> 가 높아질 수 있음</li>\n<li><strong>유지보수</strong> 가 어려워짐</li>\n</ul>\n<p>따라서 MVC 패턴은 앱의 규모가 커지면 커질수록 유지보수가 굉장이 어려워 진다는 단점이 있다. 이러한 <strong>MVC 패턴의 단점</strong> 을 보완하기 위하여 나온것이 <strong>MVVM 패턴</strong> 이다.</p>\n<p><strong>MVVM 패턴</strong> 은 기존 MVC에서 Model과 View는 동일하지만 <strong>ViewModel</strong> 을 추가한 형태이다. </p>\n<img src='https://user-images.githubusercontent.com/63226023/151661992-50183d81-a040-4d8d-91d1-8a89a3853b44.png' width='60%'>\n<p>앞서 말한 MVC 패턴은 Controller(Activity)가 View와 Model간 상호작용을 하였다.<br>\nMVVM 패턴에서는 <strong>View</strong> 는 <strong>ViewModel의 데이터를 관찰</strong> 하여 UI를 갱신한다. 또한 <strong>ViewModel</strong> 은 <strong>Model</strong> 로부터 데이터의 갱신을 및 요청한 데이터를 받는다. </p>\n<p>결론적으로 <strong>View에서 사용자에게 보여줄 데이터</strong> 는 <strong>ViewModel</strong> 이 가지고 있고 이를 <strong>관찰</strong> 하기 때문에 <code class=\"language-text\">MVC 패턴과 다르게</code> <strong>View가 데이터를 가져오기위해 DB에 접근을 하지 않고 오직 UI 갱신에만 신경쓰게 된다.</strong></p>\n<p>따라서 MVVM 패턴을 적용하게 된다면 안드로이드에서 <strong>다음과 같은 장점을 가진다.</strong></p>\n<ul>\n<li>View의 UI 갱신이 간단하다.(ViewModel의 데이터를 관찰하고 있기 때문이다)</li>\n<li>ViewModel이 데이터를 가지고 있으므로 <strong>메모리 누수</strong> 방지 (View와 Model간의 상호작용이 없어 생명주기에 의존하지 않는다)</li>\n<li>기능별로 <strong>모듈화</strong> 가 잘 되어 있기 때문에 유지 보수가 용이.</li>\n</ul>\n<p>이러한 MVVM 패턴을 잘 활용한다면 좋은 앱을 개발할 수 있을것이다. 그렇지만 MVC 패턴은 쉽게 구현을 할 수 있었지만 MVVM 패턴은 <strong>구조가 복잡하다는 단점</strong> 이 있다.</p>\n<p>구글에서는 이러한 <strong>MVVM 패턴</strong> 을 비교적 간편하게 적용할 수 있도록 <strong>ACC</strong> 라는 것을 제공한다.</p>\n<h1 id=\"안드로이드-아키텍처-컴포넌트ACC\" style=\"position:relative;\"><a href=\"#%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8ACC\" aria-label=\"안드로이드 아키텍처 컴포넌트ACC permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>안드로이드 아키텍처 컴포넌트(ACC)</h1>\n<p>구글에서 제공하는 안드로이드 Jetpack의 구성요소중 하나인 ACC 는 아래의 그림과 같다.</p>\n<img src='https://user-images.githubusercontent.com/63226023/151663025-31f02dd5-30e2-4035-b924-12d9df521945.png'>\n<h2 id=\"ViewModel\" style=\"position:relative;\"><a href=\"#ViewModel\" aria-label=\"ViewModel permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>ViewModel</h2>\n<p>ViewModel은 앞서 설명한대로 UI를 갱신할 <strong>데이터만을 가지고 있으며</strong> View와 분리되어 있어서 <strong>생명주기에 영향</strong> 을 미치지 않는다.(예: 앱의 회전등이 일어날때)</p>\n<h2 id=\"LiveData\" style=\"position:relative;\"><a href=\"#LiveData\" aria-label=\"LiveData permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>LiveData</h2>\n<p>LiveData는 데이터 홀더이며 저장된 데이터(ViewModel)을 관찰할 수 있게(Obserable) 해준다. 또한 Activity / Fragment의 생명주기를 인식하여 활동을 하고 있을 때만(Activity가 활성화) 동작을 하게되어 이는 <strong>메모리 누수</strong> 의 발생을 줄여준다.</p>\n<h2 id=\"RoomDatabase\" style=\"position:relative;\"><a href=\"#RoomDatabase\" aria-label=\"RoomDatabase permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>RoomDatabase</h2>\n<p>RoomDatabase는 <strong>SQLite 데이터베이스를 쉽게 사용</strong> 할 수 있도록 해주는 라이브러리이다. 별도의 쿼리문을 쓰지 않더라도 더욱 직관적이고 편하게 데이터베이스를 사용할 수 있다.</p>\n<h2 id=\"Repository\" style=\"position:relative;\"><a href=\"#Repository\" aria-label=\"Repository permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>Repository</h2>\n<p>ViewModel이 데이터베이스나 외부의 웹 서비스로부터 데이터를 주고받기 위해, 데이터 API를 들고 있는 클래스이다. 따라서 ViewModel은 직접 데이터베이스나 웹 서비스에 접근하지 않고 Repository에 접근하여 일관성 있게 데이터를 가져올 수 있다.</p>\n<hr>\n<h1 id=\"정리하며\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC%ED%95%98%EB%A9%B0\" aria-label=\"정리하며 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>정리하며👍</h1>\n<p>구글에서 제공하는 <strong>ACC</strong> 의 여러가지 구성 요소들을 활용하여 <strong>MVVM 패턴</strong> 을 적용하고 사용할 수 있다. </p>\n<blockquote>\n<p>ACC와 MVVM에 대해선 알겠는데 이를 적용시킬수 있을까..😅😅</p>\n</blockquote>\n<p>MVVM 패턴이 <strong>좋은것은 알겠지만 이를 어떻게 적용을 시킬지에 대한 의문</strong> 과 ACC 가 도움을 주는지는 알겠지만 <strong>사용을 어떻게 해야할 지 아직까지 잘 생각이 들지 않는다.</strong></p>\n<p>앞으로 ACC의 구성 요소와 많은 코드, 예제를 보면서 <strong>패키지의 구조 및 코드의 구현 방식</strong> 을 많이 접해봐야겠다는 생각이 들었다. </p>","frontmatter":{"title":"안드로이드 MVVM 패턴과 ACC 알아보기","date":"January 29, 2022","update":"January 29, 2022","tags":["Android","MVVM","ACC"],"series":"Android"},"fields":{"slug":"/android-acc/","readingTime":{"minutes":7.745}}},"seriesList":{"edges":[{"node":{"id":"8da53698-7fbf-50de-b57d-674258641696","fields":{"slug":"/android-start/"},"frontmatter":{"title":"첫 안드로이드 개발에 대한 회고"}}},{"node":{"id":"32630555-7ffc-5c77-8e93-41b9441313c7","fields":{"slug":"/lifecycle/"},"frontmatter":{"title":"안드로이드 Lifecycle 제대로 알기"}}},{"node":{"id":"02cd12ae-6f40-58aa-be67-edbe6836235b","fields":{"slug":"/fragment/"},"frontmatter":{"title":"안드로이드 Fragment 사용"}}},{"node":{"id":"351d6f88-b8e1-5a92-8ab2-5a18f816e5f2","fields":{"slug":"/intent/"},"frontmatter":{"title":"안드로이드 인텐트의 개념"}}},{"node":{"id":"584879b5-e89c-570d-9728-e24e7543a406","fields":{"slug":"/android-context/"},"frontmatter":{"title":"안드로이드 Context의 개념"}}},{"node":{"id":"e77807c0-3767-530f-a643-b3c28eead54b","fields":{"slug":"/recyclerview/"},"frontmatter":{"title":"안드로이드 4대 컴포넌트란"}}},{"node":{"id":"7b7ee01b-c911-5343-9957-c4ef27024778","fields":{"slug":"/broadcast/"},"frontmatter":{"title":"안드로이드 브로드캐스트(Broadcast)"}}},{"node":{"id":"df99c5d4-e349-5463-9a5f-c65c2c714a98","fields":{"slug":"/android-service/"},"frontmatter":{"title":"안드로이드 서비스(Service) 개요"}}},{"node":{"id":"c1750e54-c129-5248-b9a4-dc6ead87c256","fields":{"slug":"/pendingintent/"},"frontmatter":{"title":"안드로이드 PendingIntent의 개념"}}},{"node":{"id":"915c5a43-52f4-5d96-9e4b-5dccace98788","fields":{"slug":"/notification/"},"frontmatter":{"title":"안드로이드 알림(Notification) 만들기"}}},{"node":{"id":"ba69adf2-5458-521e-b6eb-85bbad0e6385","fields":{"slug":"/android-jetpack/"},"frontmatter":{"title":"안드로이드 Jetpack에 대해"}}},{"node":{"id":"cc73ab05-b427-563d-82a2-220a8c3fedb6","fields":{"slug":"/android-acc/"},"frontmatter":{"title":"안드로이드 MVVM 패턴과 ACC 알아보기"}}},{"node":{"id":"832ca7b8-20af-5b55-9b16-2610187c24ae","fields":{"slug":"/viewmodel/"},"frontmatter":{"title":"안드로이드 Jetpack의 ViewModel 사용해보기"}}},{"node":{"id":"da0c8a2b-e2de-5ed4-b99f-fdcbcc59ee14","fields":{"slug":"/livedata/"},"frontmatter":{"title":"안드로이드 Jetpack의 LiveData 적용하기"}}},{"node":{"id":"379be128-999b-5d4c-b690-3f2552a189f3","fields":{"slug":"/databinding/"},"frontmatter":{"title":"안드로이드 DataBinding + LiveData 적용하기"}}},{"node":{"id":"f004c3a4-f9d8-509d-ab8f-7ae273cc1f6f","fields":{"slug":"/coroutine/"},"frontmatter":{"title":"안드로이드 코루틴의 기초 알아보기"}}},{"node":{"id":"03b60894-ee1f-5d06-94b7-a41567772d61","fields":{"slug":"/room-database/"},"frontmatter":{"title":"안드로이드 Room 사용하면서 알아보기"}}},{"node":{"id":"7a30a0fa-f5f4-5b2a-9e51-03568d97de6d","fields":{"slug":"/android-dagger2/"},"frontmatter":{"title":"안드로이드 Dagger2 맛보기"}}},{"node":{"id":"793dad13-2ba5-5df0-957c-4763d3df25a2","fields":{"slug":"/android-dagger2-more/"},"frontmatter":{"title":"안드로이드 Dagger2 좀 더 알아가기"}}},{"node":{"id":"e7e7c2d3-ace1-53dc-bd3b-ee4e96ad9b6c","fields":{"slug":"/android-hilt/"},"frontmatter":{"title":"안드로이드 Hilt에 대해 알아보기"}}},{"node":{"id":"fcc174d6-e820-5bfb-8407-5db69e9cff26","fields":{"slug":"/repository-pattern/"},"frontmatter":{"title":"안드로이드 Repository 패턴은 무엇인가"}}},{"node":{"id":"e7993b01-d5c9-5d7b-ac89-de6c6db8a927","fields":{"slug":"/datastore/"},"frontmatter":{"title":"새로운 동료 DataStore 알아보기"}}},{"node":{"id":"9ca4a2fd-2662-5c91-99af-5ddf44fc5fd4","fields":{"slug":"/android-diffutil/"},"frontmatter":{"title":"안드로이드 RecyclerView의 DiffUtil 알아보기"}}},{"node":{"id":"2af94fb4-d2f5-5af1-9f2a-cd678174506d","fields":{"slug":"/viewpager2/"},"frontmatter":{"title":"안드로이드 ViewPager2 사용기"}}},{"node":{"id":"55676805-c6d4-5a07-af82-a6a5239d2384","fields":{"slug":"/runOnUiThread/"},"frontmatter":{"title":"안드로이드 runOnUiThread?"}}},{"node":{"id":"4135a47f-c10c-5535-8b71-3add3f62dd6c","fields":{"slug":"/android-launcher/"},"frontmatter":{"title":"안드로이드에서 Launcher를 통한 결과 전달"}}},{"node":{"id":"3f56723e-63f6-5dd9-b2e2-fe403e99c18b","fields":{"slug":"/android-menu/"},"frontmatter":{"title":"안드로이드 다양한 Menu들 사용하기"}}},{"node":{"id":"e8c7ca90-23b4-5683-a655-90460391cf01","fields":{"slug":"/android-permission/"},"frontmatter":{"title":"안드로이드 Permission 가져오기"}}},{"node":{"id":"b600df71-260c-567f-8ccf-592f16304768","fields":{"slug":"/android-sqlite/"},"frontmatter":{"title":"안드로이드 내부 데이터 저장 SQLite"}}},{"node":{"id":"ad7d73e5-a4b6-5f44-bd0f-867cb4d2e8ae","fields":{"slug":"/android-local-service/"},"frontmatter":{"title":"안드로이드 Local Service 알아보기"}}},{"node":{"id":"e3a294b0-afed-5673-8a7a-0affb6d3dcdc","fields":{"slug":"/android-fragment/"},"frontmatter":{"title":"안드로이드 Fragment 조각내기"}}},{"node":{"id":"52277946-9258-55cd-9361-7b6cd2c26cf6","fields":{"slug":"/livedata-transform/"},"frontmatter":{"title":"안드로이드 MediatorLiveData와 Transformations"}}},{"node":{"id":"26ead8cc-53e7-5fca-8930-d6762ae10124","fields":{"slug":"/android-navigation/"},"frontmatter":{"title":"안드로이드 Navigation 사용하기"}}},{"node":{"id":"abbe933c-9872-5d48-8ef7-04d14e785ccc","fields":{"slug":"/compose-start/"},"frontmatter":{"title":"안드로이드 Compose 알아보기"}}},{"node":{"id":"f2966618-c744-5fb8-b785-3650ebae1072","fields":{"slug":"/compose-lifecycle/"},"frontmatter":{"title":"안드로이드 Compose 수명 주기"}}},{"node":{"id":"a2f497d1-88e4-5dee-b9ef-43228c17b4c3","fields":{"slug":"/compose-state-hoisting/"},"frontmatter":{"title":"안드로이드 Compose 상태 호이스팅"}}},{"node":{"id":"bbef1829-8d9e-589f-b1c8-22945fc1bd11","fields":{"slug":"/compose-side-effect/"},"frontmatter":{"title":"안드로이드 Side Effect란?"}}},{"node":{"id":"75dc9cf5-f813-58b3-b426-c9125325ea76","fields":{"slug":"/android-version-catalog/"},"frontmatter":{"title":"안드로이드 Version Catalog 도입하기"}}},{"node":{"id":"1eaf8bbe-518b-5a56-bd4d-230253d4a1db","fields":{"slug":"/android-webview/"},"frontmatter":{"title":"안드로이드 WebView로 웹과 놀기"}}},{"node":{"id":"bae61635-412c-5e43-8a7b-1eafe2722928","fields":{"slug":"/compose-theme/"},"frontmatter":{"title":"Compose 나만의 Custom Theme 설정하기"}}},{"node":{"id":"28df186b-d648-5562-a726-a8c7350b5a01","fields":{"slug":"/compose-bezier/"},"frontmatter":{"title":"Compose에서 Bezier 곡선으로 스쿼클 만들기"}}},{"node":{"id":"eb0bbfb7-fa8e-53da-b0ad-3b250756090e","fields":{"slug":"/multipart/"},"frontmatter":{"title":"Ktor와 Multipart로 파일 업로드 근데 이제 Ktrofit을 곁들인"}}}]},"previous":{"fields":{"slug":"/android-jetpack/"},"frontmatter":{"title":"안드로이드 Jetpack에 대해"}},"next":{"fields":{"slug":"/viewmodel/"},"frontmatter":{"title":"안드로이드 Jetpack의 ViewModel 사용해보기"}}},"pageContext":{"id":"cc73ab05-b427-563d-82a2-220a8c3fedb6","series":"Android","previousPostId":"ba69adf2-5458-521e-b6eb-85bbad0e6385","nextPostId":"832ca7b8-20af-5b55-9b16-2610187c24ae"}},"staticQueryHashes":[],"slicesMap":{}}