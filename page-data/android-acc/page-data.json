{"componentChunkName":"component---src-templates-post-jsx","path":"/android-acc/","result":{"data":{"site":{"siteMetadata":{"title":"ppeper🥤"}},"markdownRemark":{"id":"3cb29f6c-c1ac-5e6b-806e-39b4dabde747","excerpt":"안드로이드 앱 개발을 시작하면 Activity에 거의 모든 동작하는 코드 를 직접 넣는다. 이렇게 모든 코드를 넣다보면 구조화된 코드의 작성이 없게되고 추후에 유지 보수 가 어려워진다. 처음 안드로이드 프로젝트를 진행하면서 기능을 바꾸거나 추가할 때 어느 부분을 수정해야하는지 굉장히 난해했던 경험이 있었고 자연스럽게 디자인 패턴을 공부를 하고 적용을 해봐…","html":"<img src=\"https://user-images.githubusercontent.com/63226023/151594101-266890b7-079a-47c5-9daa-2afbc335ccb7.png\">\n<p>안드로이드 앱 개발을 시작하면 <strong>Activity에 거의 모든 동작하는 코드</strong> 를 직접 넣는다. 이렇게 모든 코드를 넣다보면 <strong>구조화된 코드의 작성이 없게되고 추후에 유지 보수</strong> 가 어려워진다.</p>\n<p>처음 안드로이드 프로젝트를 진행하면서 <strong>기능을 바꾸거나 추가할 때 어느 부분을 수정해야하는지</strong> 굉장히 난해했던 경험이 있었고 자연스럽게 디자인 패턴을 공부를 하고 적용을 해봐야겠다는 생각이 들었다.😎 </p>\n<p align=\"center\"><img src=\"https://user-images.githubusercontent.com/63226023/151658824-a9a66cb5-dadb-4931-b03a-eba217a1c345.png\" width=\"70%\"></p>\n<blockquote>\n<p>이렇게 모든 동작들을 하나의 Acitivity에 넣다보면 스파게티 코드가 된다...</p>\n</blockquote>\n<p>다행이 구글에서 <code class=\"language-text\">Jetpack</code>을 출시하여 <strong>안드로이드 아키텍쳐 컴포넌트(ACC)</strong> 를 포함하여 <strong>MVVM 패턴</strong> 에 따른 앱 개발을 하도록 제공하고 있다.<br>\n이번 포스팅은 <strong>안드로이드 아키첵처 컴포넌트(ACC)</strong> 와 <strong>MVVM 패턴</strong> 에 대해 정리를 해보려고 한다.</p>\n<hr>\n<h1>📍 MVC vs MVVM</h1>\n<p>MVVM 디자인 패턴을 알아보기 전에 이전에 사용하던 MVC 패턴을 알아보자!</p>\n<p>MVC 패턴은 <strong>Model-View-Controller</strong> 의 약자로 기능별로 나타내면 다음과 같다.</p>\n<ul>\n<li>Model : Data와 관련한 처리를 한다.</li>\n<li>View : Controller로 부터 알림을 받고, Model을 참조하여 사용자가 볼 화면을 구성한다.</li>\n<li>Controller : 사용자의 입력을 받는다.</li>\n</ul>\n<img src=\"https://user-images.githubusercontent.com/63226023/151660484-18f2e9c3-8733-46b2-ac8a-9e9c89a054d4.png\">\n<blockquote>\n<ol>\n<li><strong>Controller</strong> 는 사용자의 입력을 받는다.   </li>\n<li>Controller는 입력에 따라서 <strong>Model의 갱신</strong> 을 요청한다.</li>\n<li><strong>View</strong> 는 <strong>Model을 참조</strong> 하여 <strong>사용자가 볼 화면(UI)를 업데이트</strong> 한다.</li>\n</ol>\n</blockquote>\n<p>안드로이드에서는 <strong>Controller</strong> 의 역할과 <strong>View</strong> 의 역할을 함께하게 된다(OnClickListener 등). 따라서 기존의 단순한 형태의 MVC 패턴에 따른 Activity에 모든 코드를 넣으면 이런 단점들이 발생하였다.</p>\n<ul>\n<li>앱에 기능을 추가할때 마다 <strong>Activity의 코드양이 많아짐</strong></li>\n<li><strong>View와 Model 간의 결합도</strong> 가 높아짐</li>\n<li><strong>코드 복잡도</strong> 가 높아질 수 있음</li>\n<li><strong>유지보수</strong> 가 어려워짐</li>\n</ul>\n<p>따라서 MVC 패턴은 앱의 규모가 커지면 커질수록 유지보수가 굉장이 어려워 진다는 단점이 있다. 이러한 <strong>MVC 패턴의 단점</strong> 을 보완하기 위하여 나온것이 <strong>MVVM 패턴</strong> 이다.</p>\n<p><strong>MVVM 패턴</strong> 은 기존 MVC에서 Model과 View는 동일하지만 <strong>ViewModel</strong> 을 추가한 형태이다. </p>\n<img src=\"https://user-images.githubusercontent.com/63226023/151661992-50183d81-a040-4d8d-91d1-8a89a3853b44.png\" width=\"60%\">\n<p>앞서 말한 MVC 패턴은 Controller(Activity)가 View와 Model간 상호작용을 하였다.<br>\nMVVM 패턴에서는 <strong>View</strong> 는 <strong>ViewModel의 데이터를 관찰</strong> 하여 UI를 갱신한다. 또한 <strong>ViewModel</strong> 은 <strong>Model</strong> 로부터 데이터의 갱신을 및 요청한 데이터를 받는다. </p>\n<p>결론적으로 <strong>View에서 사용자에게 보여줄 데이터</strong> 는 <strong>ViewModel</strong> 이 가지고 있고 이를 <strong>관찰</strong> 하기 때문에 <code class=\"language-text\">MVC 패턴과 다르게</code> <strong>View가 데이터를 가져오기위해 DB에 접근을 하지 않고 오직 UI 갱신에만 신경쓰게 된다.</strong></p>\n<p>따라서 MVVM 패턴을 적용하게 된다면 안드로이드에서 <strong>다음과 같은 장점을 가진다.</strong></p>\n<ul>\n<li>View의 UI 갱신이 간단하다.(ViewModel의 데이터를 관찰하고 있기 때문이다)</li>\n<li>ViewModel이 데이터를 가지고 있으므로 <strong>메모리 누수</strong> 방지 (View와 Model간의 상호작용이 없어 생명주기에 의존하지 않는다)</li>\n<li>기능별로 <strong>모듈화</strong> 가 잘 되어 있기 때문에 유지 보수가 용이.</li>\n</ul>\n<p>이러한 MVVM 패턴을 잘 활용한다면 좋은 앱을 개발할 수 있을것이다. 그렇지만 MVC 패턴은 쉽게 구현을 할 수 있었지만 MVVM 패턴은 <strong>구조가 복잡하다는 단점</strong> 이 있다.</p>\n<p>구글에서는 이러한 <strong>MVVM 패턴</strong> 을 비교적 간편하게 적용할 수 있도록 <strong>ACC</strong> 라는 것을 제공한다.</p>\n<h1>안드로이드 아키텍처 컴포넌트(ACC)</h1>\n<p>구글에서 제공하는 안드로이드 Jetpack의 구성요소중 하나인 ACC 는 아래의 그림과 같다.</p>\n<img src=\"https://user-images.githubusercontent.com/63226023/151663025-31f02dd5-30e2-4035-b924-12d9df521945.png\">\n<h2>ViewModel</h2>\n<p>ViewModel은 앞서 설명한대로 UI를 갱신할 <strong>데이터만을 가지고 있으며</strong> View와 분리되어 있어서 <strong>생명주기에 영향</strong> 을 미치지 않는다.(예: 앱의 회전등이 일어날때)</p>\n<h2>LiveData</h2>\n<p>LiveData는 데이터 홀더이며 저장된 데이터(ViewModel)을 관찰할 수 있게(Obserable) 해준다. 또한 Activity / Fragment의 생명주기를 인식하여 활동을 하고 있을 때만(Activity가 활성화) 동작을 하게되어 이는 <strong>메모리 누수</strong> 의 발생을 줄여준다.</p>\n<h2>RoomDatabase</h2>\n<p>RoomDatabase는 <strong>SQLite 데이터베이스를 쉽게 사용</strong> 할 수 있도록 해주는 라이브러리이다. 별도의 쿼리문을 쓰지 않더라도 더욱 직관적이고 편하게 데이터베이스를 사용할 수 있다.</p>\n<h2>Repository</h2>\n<p>ViewModel이 데이터베이스나 외부의 웹 서비스로부터 데이터를 주고받기 위해, 데이터 API를 들고 있는 클래스이다. 따라서 ViewModel은 직접 데이터베이스나 웹 서비스에 접근하지 않고 Repository에 접근하여 일관성 있게 데이터를 가져올 수 있다.</p>\n<hr>\n<h1>정리하며👍</h1>\n<p>구글에서 제공하는 <strong>ACC</strong> 의 여러가지 구성 요소들을 활용하여 <strong>MVVM 패턴</strong> 을 적용하고 사용할 수 있다. </p>\n<blockquote>\n<p>ACC와 MVVM에 대해선 알겠는데 이를 적용시킬수 있을까..😅😅</p>\n</blockquote>\n<p>MVVM 패턴이 <strong>좋은것은 알겠지만 이를 어떻게 적용을 시킬지에 대한 의문</strong> 과 ACC 가 도움을 주는지는 알겠지만 <strong>사용을 어떻게 해야할 지 아직까지 잘 생각이 들지 않는다.</strong></p>\n<p>앞으로 ACC의 구성 요소와 많은 코드, 예제를 보면서 <strong>패키지의 구조 및 코드의 구현 방식</strong> 을 많이 접해봐야겠다는 생각이 들었다. </p>","frontmatter":{"title":"안드로이드 MVVM 패턴과 ACC 알아보기","date":"January 29, 2022","update":"January 29, 2022","tags":["Android","MVVM","ACC"],"series":"Android"},"fields":{"slug":"/android-acc/","readingTime":{"minutes":7.745}}},"seriesList":{"edges":[{"node":{"id":"6925146a-2b07-5bc9-9607-184a4e3c68c3","fields":{"slug":"/android-start/"},"frontmatter":{"title":"첫 안드로이드 개발에 대한 회고"}}},{"node":{"id":"a565c6a3-fcce-5c9a-ad4d-02af13741cf5","fields":{"slug":"/lifecycle/"},"frontmatter":{"title":"안드로이드 Lifecycle 제대로 알기"}}},{"node":{"id":"468a8f79-4ea8-5898-b283-757c8e875153","fields":{"slug":"/fragment/"},"frontmatter":{"title":"안드로이드 Fragment 사용"}}},{"node":{"id":"bb6db639-8e2b-5530-be8b-949a8b1760be","fields":{"slug":"/intent/"},"frontmatter":{"title":"안드로이드 인텐트의 개념"}}},{"node":{"id":"36ff293e-dde0-550d-aeb8-ec537b790e20","fields":{"slug":"/recyclerview/"},"frontmatter":{"title":"안드로이드 4대 컴포넌트란"}}},{"node":{"id":"797d9ee9-2c11-55bc-b727-4ae592506f62","fields":{"slug":"/android-context/"},"frontmatter":{"title":"안드로이드 Context의 개념"}}},{"node":{"id":"f324f418-379e-5586-bd19-dea6cc747952","fields":{"slug":"/broadcast/"},"frontmatter":{"title":"안드로이드 브로드캐스트(Broadcast)"}}},{"node":{"id":"1668e5f7-7335-5076-9f55-1bec5c8e40be","fields":{"slug":"/android-service/"},"frontmatter":{"title":"안드로이드 서비스(Service) 개요"}}},{"node":{"id":"0b7da456-386b-5c28-b4a8-fefb68cdff05","fields":{"slug":"/pendingintent/"},"frontmatter":{"title":"안드로이드 PendingIntent의 개념"}}},{"node":{"id":"75afba69-c4e6-5bef-ab1b-d9afad6a6115","fields":{"slug":"/notification/"},"frontmatter":{"title":"안드로이드 알림(Notification) 만들기"}}},{"node":{"id":"b8aadf5e-7f02-5e8d-a985-a514d4d23797","fields":{"slug":"/android-jetpack/"},"frontmatter":{"title":"안드로이드 Jetpack에 대해"}}},{"node":{"id":"3cb29f6c-c1ac-5e6b-806e-39b4dabde747","fields":{"slug":"/android-acc/"},"frontmatter":{"title":"안드로이드 MVVM 패턴과 ACC 알아보기"}}},{"node":{"id":"eb635b92-e487-54e6-ad67-e65845019036","fields":{"slug":"/viewmodel/"},"frontmatter":{"title":"안드로이드 Jetpack의 ViewModel 사용해보기"}}},{"node":{"id":"664bce30-45ec-5072-80a9-787c6e62e8a1","fields":{"slug":"/livedata/"},"frontmatter":{"title":"안드로이드 Jetpack의 LiveData 적용하기"}}},{"node":{"id":"98ef256e-b69d-550a-9092-ccea70762e3f","fields":{"slug":"/databinding/"},"frontmatter":{"title":"안드로이드 DataBinding + LiveData 적용하기"}}},{"node":{"id":"c555e79d-0c6c-55f6-bbe3-540d4870fbaa","fields":{"slug":"/coroutine/"},"frontmatter":{"title":"안드로이드 코루틴의 기초 알아보기"}}},{"node":{"id":"120e4269-fab9-56d3-a8c3-4eb27ff99dbc","fields":{"slug":"/room-database/"},"frontmatter":{"title":"안드로이드 Room 사용하면서 알아보기"}}},{"node":{"id":"a23c3328-e672-5cda-b982-a2a0b412559e","fields":{"slug":"/android-dagger2/"},"frontmatter":{"title":"안드로이드 Dagger2 맛보기"}}},{"node":{"id":"97bedaf5-babf-55d6-9af8-caf47bb169b6","fields":{"slug":"/android-dagger2-more/"},"frontmatter":{"title":"안드로이드 Dagger2 좀 더 알아가기"}}},{"node":{"id":"bb9a7240-98d9-538d-9224-6d110a0f0358","fields":{"slug":"/android-hilt/"},"frontmatter":{"title":"안드로이드 Hilt에 대해 알아보기"}}},{"node":{"id":"bf6ff02b-6b19-5062-a565-0d3f1955be42","fields":{"slug":"/repository-pattern/"},"frontmatter":{"title":"안드로이드 Repository 패턴은 무엇인가"}}},{"node":{"id":"8c9cfe55-c118-5907-b606-febd84308e2f","fields":{"slug":"/datastore/"},"frontmatter":{"title":"새로운 동료 DataStore 알아보기"}}},{"node":{"id":"1f43678a-5010-5917-beb2-ad59b1882a3b","fields":{"slug":"/android-diffutil/"},"frontmatter":{"title":"안드로이드 RecyclerView의 DiffUtil 알아보기"}}},{"node":{"id":"afd2b0e2-6cb5-5753-b370-ae59b99bcd30","fields":{"slug":"/viewpager2/"},"frontmatter":{"title":"안드로이드 ViewPager2 사용기"}}},{"node":{"id":"4f0c8d12-3fbe-52d0-95da-58b34e9359fb","fields":{"slug":"/runOnUiThread/"},"frontmatter":{"title":"안드로이드 runOnUiThread?"}}},{"node":{"id":"df647556-1bf0-55cc-af42-57acb7206e5f","fields":{"slug":"/android-launcher/"},"frontmatter":{"title":"안드로이드에서 Launcher를 통한 결과 전달"}}},{"node":{"id":"9e5d89dd-6d3c-5442-bf07-3b6dbf2b3bb1","fields":{"slug":"/android-menu/"},"frontmatter":{"title":"안드로이드 다양한 Menu들 사용하기"}}},{"node":{"id":"6412e19a-99a7-5938-90d1-7296a34757b2","fields":{"slug":"/android-sqlite/"},"frontmatter":{"title":"안드로이드 내부 데이터 저장 SQLite"}}},{"node":{"id":"c4fb68dc-0882-5bc8-8cf8-1e4bcb82d690","fields":{"slug":"/android-permission/"},"frontmatter":{"title":"안드로이드 Permission 가져오기"}}},{"node":{"id":"d5df013b-8ddd-5c33-ab15-38ddacceb71e","fields":{"slug":"/android-local-service/"},"frontmatter":{"title":"안드로이드 Local Service 알아보기"}}},{"node":{"id":"c3641eee-48c5-5870-a5d1-26d1401311e7","fields":{"slug":"/android-fragment/"},"frontmatter":{"title":"안드로이드 Fragment 조각내기"}}},{"node":{"id":"f0a71dbc-6c77-52e0-a749-cc19dbc1b8b3","fields":{"slug":"/livedata-transform/"},"frontmatter":{"title":"안드로이드 MediatorLiveData와 Transformations"}}},{"node":{"id":"ffdd7d7b-34ae-58f8-87f8-7c6c6513ddf5","fields":{"slug":"/android-navigation/"},"frontmatter":{"title":"안드로이드 Navigation 사용하기"}}},{"node":{"id":"38730b0e-28e4-544e-a8db-aad5668516cc","fields":{"slug":"/compose-start/"},"frontmatter":{"title":"안드로이드 Compose 알아보기"}}},{"node":{"id":"f3301d6b-63a2-5b07-b6cb-473f6ec13c7e","fields":{"slug":"/compose-lifecycle/"},"frontmatter":{"title":"안드로이드 Compose 수명 주기"}}},{"node":{"id":"a3a56595-ff49-5d63-b85a-4db183a541b5","fields":{"slug":"/compose-state-hoisting/"},"frontmatter":{"title":"안드로이드 Compose 상태 호이스팅"}}},{"node":{"id":"b7fcd3ce-4e92-52fe-ba70-ada12c9ac982","fields":{"slug":"/compose-side-effect/"},"frontmatter":{"title":"안드로이드 Side Effect란?"}}},{"node":{"id":"57cc52b2-25b0-56fa-92d8-91e55927e81b","fields":{"slug":"/android-version-catalog/"},"frontmatter":{"title":"안드로이드 Version Catalog 도입하기"}}},{"node":{"id":"24c2c48e-3290-5d58-b125-033c68f50682","fields":{"slug":"/android-webview/"},"frontmatter":{"title":"안드로이드 WebView로 웹과 놀기"}}},{"node":{"id":"1da187ef-bc7f-5929-b60f-7ddda78148d4","fields":{"slug":"/compose-theme/"},"frontmatter":{"title":"Compose 나만의 Custom Theme 설정하기"}}},{"node":{"id":"a6e75dd2-49dc-5b27-9a47-308a25586348","fields":{"slug":"/compose-bezier/"},"frontmatter":{"title":"Compose에서 Bezier 곡선으로 스쿼클 만들기"}}}]},"previous":{"fields":{"slug":"/android-jetpack/"},"frontmatter":{"title":"안드로이드 Jetpack에 대해"}},"next":{"fields":{"slug":"/viewmodel/"},"frontmatter":{"title":"안드로이드 Jetpack의 ViewModel 사용해보기"}}},"pageContext":{"id":"3cb29f6c-c1ac-5e6b-806e-39b4dabde747","series":"Android","previousPostId":"b8aadf5e-7f02-5e8d-a985-a514d4d23797","nextPostId":"eb635b92-e487-54e6-ad67-e65845019036"}},"staticQueryHashes":[],"slicesMap":{}}