{"componentChunkName":"component---src-templates-post-jsx","path":"/livedata-transform/","result":{"data":{"site":{"siteMetadata":{"title":"ppeper🥤"}},"markdownRemark":{"id":"33da29ed-8ac4-5c3f-b024-3159e1da22b9","excerpt":"안드로이드에서 LiveData를 데이터를 저장하고 변화를 관찰 할 수 있는 객체이다.이번에는 LiveData를 조금 더 유연하게 사용하는 방법에 대해 몰랐던 내용을 알아보려고 한다. MediatorLiveData 지금까지 하나의 LiveData는 Observer 인터페이스를 구현하는 객체를 생성하여 LiveData 값이 변경될 때 호출되는  메소드를 통해…","html":"<p>안드로이드에서 <a href=\"https://ppeper.github.io/android/android-livedata/\">LiveData</a>를 데이터를 저장하고 변화를 관찰 할 수 있는 객체이다.이번에는 LiveData를 조금 더 유연하게 사용하는 방법에 대해 몰랐던 내용을 알아보려고 한다.</p>\n<h1 id=\"MediatorLiveData\" style=\"position:relative;\"><a href=\"#MediatorLiveData\" aria-label=\"MediatorLiveData permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>MediatorLiveData</h1>\n<p>지금까지 하나의 LiveData는 Observer 인터페이스를 구현하는 객체를 생성하여 LiveData 값이 변경될 때 호출되는 <code class=\"language-text\">onChange()</code> 메소드를 통해 관찰 할 수 있었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\">liveString<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">object</span> <span class=\"token operator\">:</span> Observer<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onChanged</span><span class=\"token punctuation\">(</span>liveString<span class=\"token operator\">:</span> String<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        Log<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"value : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$</span><span class=\"token expression\">liveString</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        text<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> liveString\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 람다식으로 변환</span>\nliveString<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> liveString <span class=\"token operator\">-></span>\n    Log<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"value : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$</span><span class=\"token expression\">liveString</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    text<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> liveString\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">MediatorLiveData</code>는 여러 LiveData 객체들을 <code class=\"language-text\">observe</code>할 수 있도록 하는 LiveData의 하위 클래스이다. 즉 서로다른 Data Source들을 각각 관찰하는 것이 아닌 한번에 모두 관찰할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> emailLiveData<span class=\"token operator\">:</span> MutableLiveData<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token function\">MutableLiveData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">val</span> pwdLiveData<span class=\"token operator\">:</span> MutableLiveData<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token function\">MutableLiveData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">val</span> repwdLiveData<span class=\"token operator\">:</span> MutableLiveData<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token function\">MutableLiveData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">val</span> nameLiveData<span class=\"token operator\">:</span> MutableLiveData<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token function\">MutableLiveData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">val</span> isValidLiveData<span class=\"token operator\">:</span> MediatorLiveData<span class=\"token operator\">&lt;</span>Boolean<span class=\"token operator\">></span> <span class=\"token operator\">=</span> MediatorLiveData<span class=\"token operator\">&lt;</span>Boolean<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 입력이 valid 하지않으면 버튼 disabled</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n\n    <span class=\"token function\">addSource</span><span class=\"token punctuation\">(</span>emailLiveData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token function\">validateForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">addSource</span><span class=\"token punctuation\">(</span>pwdLiveData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token function\">validateForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">addSource</span><span class=\"token punctuation\">(</span>repwdLiveData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token function\">validateForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">addSource</span><span class=\"token punctuation\">(</span>nameLiveData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token function\">validateForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">validateForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Boolean <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span>emailLiveData<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrBlank</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>pwdLiveData<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrBlank</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>repwdLiveData<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrBlank</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>nameLiveData<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrBlank</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">EditText</code>의 입력값으로 받는 LiveData들에 대하여 입력되지 않은 값이 없을때만 버튼을 활성화 하기 위해 <code class=\"language-text\">addSource</code> 메소드로 <code class=\"language-text\">LiveData</code>와 콜백을 설정해준다. </p>\n<p>해당하는 LiveData들이 변경될 때 <code class=\"language-text\">validateForm()</code> 메서드가 호출되어 하나의 MediatorLiveData만 observe 하더라도 다른 LiveData의 변경사항이 observe되어 모든 EditText가 입력되었을 때 <code class=\"language-text\">isValidLiveData</code> 의 상태가 true로 변경될 것이다.</p>\n<h1 id=\"Transformations\" style=\"position:relative;\"><a href=\"#Transformations\" aria-label=\"Transformations permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>Transformations</h1>\n<p>이름과 같이 <code class=\"language-text\">LiveData</code> 를 변환하고자 할 때 사용된다.</p>\n<h2 id=\"map\" style=\"position:relative;\"><a href=\"#map\" aria-label=\"map permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>map()</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token annotation builtin\">@MainThread</span>\n<span class=\"token keyword\">public</span> static <span class=\"token operator\">&lt;</span>X<span class=\"token punctuation\">,</span> Y<span class=\"token operator\">></span> LiveData<span class=\"token operator\">&lt;</span>Y<span class=\"token operator\">></span> <span class=\"token function\">map</span><span class=\"token punctuation\">(</span>\n        <span class=\"token annotation builtin\">@NonNull</span> LiveData<span class=\"token operator\">&lt;</span>X<span class=\"token operator\">></span> source<span class=\"token punctuation\">,</span>\n        <span class=\"token annotation builtin\">@NonNull</span> <span class=\"token keyword\">final</span> Function<span class=\"token operator\">&lt;</span>X<span class=\"token punctuation\">,</span> Y<span class=\"token operator\">></span> mapFunction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">final</span> MediatorLiveData<span class=\"token operator\">&lt;</span>Y<span class=\"token operator\">></span> result <span class=\"token operator\">=</span> new MediatorLiveData<span class=\"token operator\">&lt;</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    result<span class=\"token punctuation\">.</span><span class=\"token function\">addSource</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> new Observer<span class=\"token operator\">&lt;</span>X<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token annotation builtin\">@Override</span>\n        <span class=\"token keyword\">public</span> void <span class=\"token function\">onChanged</span><span class=\"token punctuation\">(</span><span class=\"token annotation builtin\">@Nullable</span> X x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            result<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>mapFunction<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">map()</code> 함수는 <code class=\"language-text\">MediatorLiveData</code>를 내부적으로 사용하여 <code class=\"language-text\">addSource</code> 메소드를 통해 Observer를 등록해 주고 <code class=\"language-text\">onChanged()</code> 에서 <code class=\"language-text\">mapFunction</code> 를 통해 파라미터로 받은 X를 Y로 변환해 주어 result값을 set해준다.</p>\n<p>예시로 LiveData인 count의 숫자 값에 따라 계산 결과를 보여주는 times 문자열 변수는 일반적으로 하면 값이 변화할 때마다 옵저빙 하기 어렵다. 따라서 count변수의 LiveData를 변경하여 새로운 LiveData형으로 만들어 줄 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">class</span> NewActivityViewModel<span class=\"token operator\">:</span><span class=\"token function\">ViewModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 사용자의 클릭 수를 세는 변수</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> _count <span class=\"token operator\">=</span> MutableLiveData<span class=\"token operator\">&lt;</span>Int<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span> <span class=\"token punctuation\">{</span>\n        value <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">val</span> count<span class=\"token operator\">:</span> LiveData<span class=\"token operator\">&lt;</span>Int<span class=\"token operator\">></span>\n        <span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> _count\n\n    <span class=\"token comment\">// 숫자를 계산 결과를 보여주는 문자열로 보여주기 위한 Transformations.map 사용</span>\n    <span class=\"token keyword\">val</span> times <span class=\"token operator\">=</span> Transformations<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-literal singleline\"><span class=\"token string\">\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$</span><span class=\"token expression\">it</span></span><span class=\"token string\"> x 2 = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token expression\">it <span class=\"token operator\">*</span> <span class=\"token number\">2</span></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"switchMap\" style=\"position:relative;\"><a href=\"#switchMap\" aria-label=\"switchMap permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>switchMap()</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token annotation builtin\">@MainThread</span>\n<span class=\"token keyword\">public</span> static <span class=\"token operator\">&lt;</span>X<span class=\"token punctuation\">,</span> Y<span class=\"token operator\">></span> LiveData<span class=\"token operator\">&lt;</span>Y<span class=\"token operator\">></span> <span class=\"token function\">switchMap</span><span class=\"token punctuation\">(</span>\n        <span class=\"token annotation builtin\">@NonNull</span> LiveData<span class=\"token operator\">&lt;</span>X<span class=\"token operator\">></span> source<span class=\"token punctuation\">,</span>\n        <span class=\"token annotation builtin\">@NonNull</span> <span class=\"token keyword\">final</span> Function<span class=\"token operator\">&lt;</span>X<span class=\"token punctuation\">,</span> LiveData<span class=\"token operator\">&lt;</span>Y<span class=\"token operator\">></span><span class=\"token operator\">></span> switchMapFunction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">final</span> MediatorLiveData<span class=\"token operator\">&lt;</span>Y<span class=\"token operator\">></span> result <span class=\"token operator\">=</span> new MediatorLiveData<span class=\"token operator\">&lt;</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    result<span class=\"token punctuation\">.</span><span class=\"token function\">addSource</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> new Observer<span class=\"token operator\">&lt;</span>X<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        LiveData<span class=\"token operator\">&lt;</span>Y<span class=\"token operator\">></span> mSource<span class=\"token punctuation\">;</span>\n\n        <span class=\"token annotation builtin\">@Override</span>\n        <span class=\"token keyword\">public</span> void <span class=\"token function\">onChanged</span><span class=\"token punctuation\">(</span><span class=\"token annotation builtin\">@Nullable</span> X x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            LiveData<span class=\"token operator\">&lt;</span>Y<span class=\"token operator\">></span> newLiveData <span class=\"token operator\">=</span> switchMapFunction<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mSource <span class=\"token operator\">==</span> newLiveData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mSource <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                result<span class=\"token punctuation\">.</span><span class=\"token function\">removeSource</span><span class=\"token punctuation\">(</span>mSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            mSource <span class=\"token operator\">=</span> newLiveData<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mSource <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                result<span class=\"token punctuation\">.</span><span class=\"token function\">addSource</span><span class=\"token punctuation\">(</span>mSource<span class=\"token punctuation\">,</span> new Observer<span class=\"token operator\">&lt;</span>Y<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token annotation builtin\">@Override</span>\n                    <span class=\"token keyword\">public</span> void <span class=\"token function\">onChanged</span><span class=\"token punctuation\">(</span><span class=\"token annotation builtin\">@Nullable</span> Y y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        result<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">switchMap()</code> 은 map과 비슷하지만 함수의 결과로 받은 <code class=\"language-text\">LiveData</code> 값이 같다면 아무 작업도 수행하지 않고, 다를 경우 map과 동일한 방식으로 추가해 준다.</p>","frontmatter":{"title":"안드로이드 MediatorLiveData와 Transformations","date":"May 02, 2023","update":"May 02, 2023","tags":["MediatorLiveData","Transformations","LiveData"],"series":"Android"},"fields":{"slug":"/livedata-transform/","readingTime":{"minutes":4.125}}},"seriesList":{"edges":[{"node":{"id":"ec35f26c-1e41-5966-85a5-26fa93fb5998","fields":{"slug":"/android-start/"},"frontmatter":{"title":"첫 안드로이드 개발에 대한 회고"}}},{"node":{"id":"f0d5a7a2-4729-582b-85a5-b78dd0643477","fields":{"slug":"/lifecycle/"},"frontmatter":{"title":"안드로이드 Lifecycle 제대로 알기"}}},{"node":{"id":"c38cf2b3-111e-5e83-8623-c323546b3596","fields":{"slug":"/fragment/"},"frontmatter":{"title":"안드로이드 Fragment 사용"}}},{"node":{"id":"d0d74ae8-e541-598a-a0c8-30dbf6d27c14","fields":{"slug":"/intent/"},"frontmatter":{"title":"안드로이드 인텐트의 개념"}}},{"node":{"id":"7fddf3e0-5c6a-5813-b716-8b9348184adb","fields":{"slug":"/android-context/"},"frontmatter":{"title":"안드로이드 Context의 개념"}}},{"node":{"id":"da53b090-256e-5185-877e-1c63d36292dd","fields":{"slug":"/recyclerview/"},"frontmatter":{"title":"안드로이드 4대 컴포넌트란"}}},{"node":{"id":"76b96463-5dc0-5bce-9411-653b728c0d07","fields":{"slug":"/broadcast/"},"frontmatter":{"title":"안드로이드 브로드캐스트(Broadcast)"}}},{"node":{"id":"31f9951e-cfe2-5831-9791-bdd8a3f321f2","fields":{"slug":"/android-service/"},"frontmatter":{"title":"안드로이드 서비스(Service) 개요"}}},{"node":{"id":"9f0c308a-f26f-5882-b1c0-603d65208794","fields":{"slug":"/pendingintent/"},"frontmatter":{"title":"안드로이드 PendingIntent의 개념"}}},{"node":{"id":"6d7acb66-c296-5cb4-a56d-a6141652ba03","fields":{"slug":"/notification/"},"frontmatter":{"title":"안드로이드 알림(Notification) 만들기"}}},{"node":{"id":"dd38b1c0-3bb7-5d67-9871-c8a997f7665a","fields":{"slug":"/android-jetpack/"},"frontmatter":{"title":"안드로이드 Jetpack에 대해"}}},{"node":{"id":"4ae3792b-61e4-502c-997f-ea92464eb538","fields":{"slug":"/android-acc/"},"frontmatter":{"title":"안드로이드 MVVM 패턴과 ACC 알아보기"}}},{"node":{"id":"07f0687c-2335-5ce9-adbf-a9e3fdcdb964","fields":{"slug":"/viewmodel/"},"frontmatter":{"title":"안드로이드 Jetpack의 ViewModel 사용해보기"}}},{"node":{"id":"08c0cd05-8fe6-5461-8c79-629efa4d3099","fields":{"slug":"/livedata/"},"frontmatter":{"title":"안드로이드 Jetpack의 LiveData 적용하기"}}},{"node":{"id":"cd2c8fe7-7aa9-53d0-a66c-0157b8f0fdb5","fields":{"slug":"/databinding/"},"frontmatter":{"title":"안드로이드 DataBinding + LiveData 적용하기"}}},{"node":{"id":"567749b8-f03e-5f18-bf62-021e32de6506","fields":{"slug":"/coroutine/"},"frontmatter":{"title":"안드로이드 코루틴의 기초 알아보기"}}},{"node":{"id":"92a49d11-9d7c-5fc9-b5f7-9575ee1886ea","fields":{"slug":"/room-database/"},"frontmatter":{"title":"안드로이드 Room 사용하면서 알아보기"}}},{"node":{"id":"9b4e8bd5-b184-5972-b687-b5a509707a35","fields":{"slug":"/android-dagger2/"},"frontmatter":{"title":"안드로이드 Dagger2 맛보기"}}},{"node":{"id":"f3e41032-8577-5a04-bb96-62be1e0aaf4b","fields":{"slug":"/android-dagger2-more/"},"frontmatter":{"title":"안드로이드 Dagger2 좀 더 알아가기"}}},{"node":{"id":"5eb7df8d-a6a9-5e6c-a6a8-9e79a03cf5e8","fields":{"slug":"/android-hilt/"},"frontmatter":{"title":"안드로이드 Hilt에 대해 알아보기"}}},{"node":{"id":"c20926f6-1320-5a8c-9f4a-59e5892e6350","fields":{"slug":"/repository-pattern/"},"frontmatter":{"title":"안드로이드 Repository 패턴은 무엇인가"}}},{"node":{"id":"2469d97d-f2b6-544e-8ef9-20003ce2bd82","fields":{"slug":"/datastore/"},"frontmatter":{"title":"새로운 동료 DataStore 알아보기"}}},{"node":{"id":"388b7df4-d323-53ac-80ff-f4ad265a6077","fields":{"slug":"/android-diffutil/"},"frontmatter":{"title":"안드로이드 RecyclerView의 DiffUtil 알아보기"}}},{"node":{"id":"b3372752-9e81-5642-ae8e-179f5c6bc152","fields":{"slug":"/viewpager2/"},"frontmatter":{"title":"안드로이드 ViewPager2 사용기"}}},{"node":{"id":"6a3accf7-a0c8-5423-ab54-e336ed105d22","fields":{"slug":"/runOnUiThread/"},"frontmatter":{"title":"안드로이드 runOnUiThread?"}}},{"node":{"id":"5c4802cf-c4a3-5fde-9cde-044d3bf41c70","fields":{"slug":"/android-launcher/"},"frontmatter":{"title":"안드로이드에서 Launcher를 통한 결과 전달"}}},{"node":{"id":"1dde30d6-b5f2-5e8e-bed9-9b829ed73a22","fields":{"slug":"/android-menu/"},"frontmatter":{"title":"안드로이드 다양한 Menu들 사용하기"}}},{"node":{"id":"bf5f92c9-bce8-53e1-825f-5030efe6622a","fields":{"slug":"/android-permission/"},"frontmatter":{"title":"안드로이드 Permission 가져오기"}}},{"node":{"id":"1247175f-4af3-5f8d-a78f-eddc0317b772","fields":{"slug":"/android-sqlite/"},"frontmatter":{"title":"안드로이드 내부 데이터 저장 SQLite"}}},{"node":{"id":"02142718-5257-5488-b9d7-ce45ff8471b1","fields":{"slug":"/android-local-service/"},"frontmatter":{"title":"안드로이드 Local Service 알아보기"}}},{"node":{"id":"62ea7fd4-5557-5c1b-bced-0102a0ab8868","fields":{"slug":"/android-fragment/"},"frontmatter":{"title":"안드로이드 Fragment 조각내기"}}},{"node":{"id":"33da29ed-8ac4-5c3f-b024-3159e1da22b9","fields":{"slug":"/livedata-transform/"},"frontmatter":{"title":"안드로이드 MediatorLiveData와 Transformations"}}},{"node":{"id":"844abb8c-db3f-5c7a-b213-af7e4184750c","fields":{"slug":"/android-navigation/"},"frontmatter":{"title":"안드로이드 Navigation 사용하기"}}},{"node":{"id":"296e6b82-b35b-537d-a5a5-48d5d053235c","fields":{"slug":"/compose-start/"},"frontmatter":{"title":"안드로이드 Compose 알아보기"}}},{"node":{"id":"ac09eecc-30b4-525e-b40f-524fcc4dacc3","fields":{"slug":"/compose-lifecycle/"},"frontmatter":{"title":"안드로이드 Compose 수명 주기"}}},{"node":{"id":"8ecadfc1-855e-53a0-97cc-6594b192981b","fields":{"slug":"/compose-state-hoisting/"},"frontmatter":{"title":"안드로이드 Compose 상태 호이스팅"}}},{"node":{"id":"43f4b29f-ed51-5fc0-bf47-a7bdb00ae9d8","fields":{"slug":"/compose-side-effect/"},"frontmatter":{"title":"안드로이드 Side Effect란?"}}},{"node":{"id":"5bf017e2-3f6c-5f8a-b348-2b3586279023","fields":{"slug":"/android-version-catalog/"},"frontmatter":{"title":"안드로이드 Version Catalog 도입하기"}}},{"node":{"id":"d8ca9764-c28e-5491-b2d6-0f1fe3814612","fields":{"slug":"/android-webview/"},"frontmatter":{"title":"안드로이드 WebView로 웹과 놀기"}}},{"node":{"id":"9d857459-0fd2-5d37-8f39-eceec94e02b2","fields":{"slug":"/compose-theme/"},"frontmatter":{"title":"Compose 나만의 Custom Theme 설정하기"}}},{"node":{"id":"a483c66e-f6c8-5ab3-ad60-d36392c1e724","fields":{"slug":"/compose-bezier/"},"frontmatter":{"title":"Compose에서 Bezier 곡선으로 스쿼클 만들기"}}},{"node":{"id":"47c30107-f229-5a8a-835b-badfa1b4e7a6","fields":{"slug":"/multipart/"},"frontmatter":{"title":"Ktor와 Multipart로 파일 업로드 근데 이제 Ktrofit을 곁들인"}}}]},"previous":{"fields":{"slug":"/android-fragment/"},"frontmatter":{"title":"안드로이드 Fragment 조각내기"}},"next":{"fields":{"slug":"/android-navigation/"},"frontmatter":{"title":"안드로이드 Navigation 사용하기"}}},"pageContext":{"id":"33da29ed-8ac4-5c3f-b024-3159e1da22b9","series":"Android","previousPostId":"62ea7fd4-5557-5c1b-bced-0102a0ab8868","nextPostId":"844abb8c-db3f-5c7a-b213-af7e4184750c"}},"staticQueryHashes":[],"slicesMap":{}}