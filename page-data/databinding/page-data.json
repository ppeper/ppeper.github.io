{"componentChunkName":"component---src-templates-post-jsx","path":"/databinding/","result":{"data":{"site":{"siteMetadata":{"title":"ppeper🥤"}},"markdownRemark":{"id":"98ef256e-b69d-550a-9092-ccea70762e3f","excerpt":"이전의 포스팅은 를 추가하였었다.😀\n안드로이드 Jetpack의 LiveData 적용하기 이번에는 ACC 구성요소의 DataBinding 을 LiveData와 함께 사용하여 프로젝트를 더 개선된 형태로 만들어 보려고 한다. DataBinding(데이터 바인딩) 데이터 바인딩 의 주목적은 UI 레이아웃의 뷰(xml)와 앱 코드에 저장된 데이터(주요사용->Vi…","html":"<img src=\"https://user-images.githubusercontent.com/63226023/151594101-266890b7-079a-47c5-9daa-2afbc335ccb7.png\">\n<p>이전의 포스팅은 <code class=\"language-text\">ViewModel에 LiveData</code>를 추가하였었다.😀\n<a href=\"https://ppeper.github.io/android/android-livedata/\">안드로이드 Jetpack의 LiveData 적용하기</a> 이번에는 ACC 구성요소의 <strong>DataBinding</strong> 을 LiveData와 함께 사용하여 프로젝트를 더 개선된 형태로 만들어 보려고 한다.</p>\n<hr>\n<h1>DataBinding(데이터 바인딩)</h1>\n<p><strong>데이터 바인딩</strong> 의 주목적은 <strong>UI 레이아웃의 뷰(xml)와 앱 코드에 저장된 데이터(주요사용->ViewModel 인스턴스)와 연결</strong> 하는 <strong>간단한 방법</strong> 을 제공하는 것이다.</p>\n<blockquote>\n<p>📍 데이터 바인딩을 통하여 불필요한 코드를 줄여줄수 있다.</p>\n</blockquote>\n<p>데이터 바인딩은 <code class=\"language-text\">LiveData 컴포넌트와 같이 사용</code>될 때 특히 좋다. <a href=\"https://ppeper.github.io/android/android-livedata/\">LiveData 컴포넌트</a>는 실시간으로 데이터의 변경을 감시하기 때문에 <strong>데이터 바인딩</strong> 을 사용하여 UI와 앱 코드와 연결을 하게되면 데이터가 자동으로 LiveData 값을 변경할 수도 있다. 데이터 바인딩은 초기의 설정 외에 개발자가 추가로 작성할 코드가 필요 없다는 것도 큰 장점이다.</p>\n<h1>데이터 바인딩 사용하기</h1>\n<p>데이터 바인딩을 사용하기 위하 초기 작업은 다음과 같다.</p>\n<ul>\n<li>프로젝트 빌드 구성</li>\n<li>데이터 바인딩 레이아웃 파일 변환</li>\n<li>레이아웃 파일 Data 요소 추가</li>\n<li>바인딩 클래스 구성</li>\n<li>바인딩 표현식 사용</li>\n</ul>\n<p>간단한 예시를 데이터 바인딩을 사용하도록 바꾸면서 각각의 사용법을 알아갈 것이다.</p>\n<h2>1. 프로젝트 빌드 구성</h2>\n<p>데이터 바인딩을 사용하려면 우선 <strong>build.gradle</strong>(Module: 앱이름.app)에  다음을 추가해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"gradle\"><pre class=\"language-gradle\"><code class=\"language-gradle\">android <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">.</span>\n    buildFeatures <span class=\"token punctuation\">{</span>\n        dataBinding <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>전의 포스팅까지의 예시에 데이터 바인딩을 추가하기에 앞서 필요없진 코드를 삭제해 준다. 또한 사용자가 Convert 버튼을 클릭하였을때 ViewModel의 함수를 호출하여 환전된 값을 LiveData 변수에 넣어주도록 추가한다. </p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">class</span> MainViewModel<span class=\"token operator\">:</span> <span class=\"token function\">ViewModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> usd_to_eu_rate <span class=\"token operator\">=</span> <span class=\"token number\">0.74f</span>\n    <span class=\"token keyword\">var</span> dollarValue<span class=\"token operator\">:</span> MutableLiveData<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token function\">MutableLiveData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> _result<span class=\"token operator\">:</span> MutableLiveData<span class=\"token operator\">&lt;</span>Float<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token function\">MutableLiveData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">val</span> result<span class=\"token operator\">:</span> LiveData<span class=\"token operator\">&lt;</span>Float<span class=\"token operator\">></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> _result\n\n    <span class=\"token keyword\">fun</span> <span class=\"token function\">convertValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        dollarValue<span class=\"token punctuation\">.</span><span class=\"token function\">let</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>it<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                _result<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> it<span class=\"token punctuation\">.</span>value<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFloat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">times</span><span class=\"token punctuation\">(</span>usd_to_eu_rate<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                _result<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">0f</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>2. 데이터 바인딩 레이아웃 파일 변환</h2>\n<p>앱을 구성하는 <code class=\"language-text\">UI는 XML 레이아웃 파일</code>에 포함된다. 데이터 바인딩을 사용하기 위해서는 <strong>기존 XML 레이아웃 파일을 데이터 바인딩 레이아웃 파일로 변환</strong> 해야 한다. </p>\n<blockquote>\n<p>📍 루트 뷰를 <strong>Layout 컴포넌트</strong> 로 교체</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>layout</span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>android</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.android.com/apk/res/android<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>app</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.android.com/apk/res-auto<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>tools</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.android.com/tools<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>androidx.constraintlayout.widget.ConstraintLayout</span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>match_parent<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>match_parent<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">tools:</span>context</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.MainActivity<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>EditText</span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@+id/dollarText<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrap_content<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrap_content<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_marginTop</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100dp<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>ems</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>inputType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>numberDecimal<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">app:</span>layout_constraintEnd_toEndOf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parent<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">app:</span>layout_constraintStart_toStartOf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parent<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">app:</span>layout_constraintTop_toTopOf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parent<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n            .\n            .\n            .\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>androidx.constraintlayout.widget.ConstraintLayout</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>layout</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2>3. 레이아웃 파일 Data 요소 추가</h2>\n<p>데이터 바인딩 레이아웃 파일로 바꿨다면 이제 프로젝트의 UI 컨트롤러(ViewModel이나 Activity 및 Fragment)와 <strong>바인딩</strong> 되어야 한다. </p>\n<p>이 <strong>클래스의 이름</strong> 이 <strong>데이터 바인딩 레이아웃 파일에 선언</strong> 되어야 하고, <strong>클래스의 인스턴스를 참조하는 변수 이름</strong> 을 설정해야 한다. 이때 data 요소를 추가한다.</p>\n<blockquote>\n<p>📍 <strong>data</strong> 요소에는 <strong>variable</strong>, <strong>import</strong> 가 포함된다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>layout</span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>android</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.android.com/apk/res/android<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>app</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.android.com/apk/res-auto<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>tools</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.android.com/tools<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>data</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>variable</span>\n            <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myViewModel<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.kyonggi.viewmodelexample.MainViewModel<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>data</span><span class=\"token punctuation\">></span></span>\n    .\n    .\n    .\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>layout</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>예시의 코드를 보면 <strong>MainViewModel 클래스</strong>(이때 클래스는 전체 패키지 이름으로 지정해야한다.) 타입의 <strong>변수이름 myViewModel</strong> 을 사용한다고 지정하였다고 해석하면 된다.</p>\n<p>data 요소중 두 번째는 다른 클래스를 <strong>import</strong> 할 수 있으며, 이 클래스는 <strong>레이아웃 파일의 어디서든지 바인딩 표현식에서 참조가 가능하다.</strong> </p>\n<h2>4. 바인딩 클래스 구성</h2>\n<p>위의 바인딩 레이아웃 파일의 data 요소에서 참조하는 각 클래스는 <strong>레이아웃 파일의 CamelCase로 변환후 Binding이 붙은 형태</strong> 로 생성된다.(예시에서 MainViewModelBinding)</p>\n<p>이 클래스는 <strong>레이아웃 파일에 지정된 바인딩 정보</strong> 를 포함하며 이것을 <strong>바인딩되는 객체의 변수와 함수</strong> 에 연결한다.</p>\n<p>바인딩 클래스는 자동으로 생성되지만 <strong>대응되는 데이터 바인딩 레이아웃 파일에 대해 바인딩 클래스의 인스턴스를 생성</strong> 하는 코드는 생성해 줘야한다. 이때 <strong>DataBindingUtil 클래스</strong> 를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">class</span> MainActivity <span class=\"token operator\">:</span> <span class=\"token function\">AppCompatActivity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">lateinit</span> <span class=\"token keyword\">var</span> binding<span class=\"token operator\">:</span> ActivityMainBinding\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">lateinit</span> <span class=\"token keyword\">var</span> viewModel<span class=\"token operator\">:</span> MainViewModel\n\n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token operator\">:</span> Bundle<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span>\n        binding <span class=\"token operator\">=</span> DataBindingUtil<span class=\"token punctuation\">.</span><span class=\"token function\">setContentView</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> R<span class=\"token punctuation\">.</span>layout<span class=\"token punctuation\">.</span>activity_main<span class=\"token punctuation\">)</span>\n        binding<span class=\"token punctuation\">.</span>lifecycleOwner <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n        viewModel <span class=\"token operator\">=</span> <span class=\"token function\">ViewModelProvider</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>MainViewModel<span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// viewModel과 data 요소와 결합</span>\n        binding<span class=\"token punctuation\">.</span>myViewModel <span class=\"token operator\">=</span> viewModel\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>DataBindingUtil.setContentView(this, R.layout.activity_main)</strong> 을 통하여 바인딩 클래스를 생성해준다. ViewModel과 LiveData를 함께 사용하기 위해 <strong>binding.lifecycleOwner = this</strong> 를 통하여 바인딩 객체가 Activity가 존재하는 동안에 메모리에 남아있고 소멸될때 바인딩 객체도 소멸되도록 생명주기 소유자(lifecycleOwner)를 현재 Activity로 설정해 준다. 마지막으로 <strong>binding.myViewModel = viewModel</strong> 을 통하여 레이아웃 data 요소의 변수 myViewModel을 ViewModel과 바인딩해준다.</p>\n<h2>5. 바인딩 표현식 사용</h2>\n<p>바인딩 표현식은 <strong>단방향</strong> 과 <strong>양방향</strong> 이 있다. 또한 바인딩의 표현식은 <strong>산술 표현식, 함수 호출, 문자열 결합, 배열 요소 사용, 비교 연산</strong> 등을 수행 할 수 있다.</p>\n<p>단방향 표현식은 <strong>@로 사작하며 중괄호({}) 안에 표현식을 넣는다.</strong> 예를 들어 data 요소의 변수이름이 viewmodel이고 result 변수를 포함하는 ViewModel 인스턴스라면 다음과 같이 바인딩 표현식을 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\">android:text=\"@{viewmodel.result}\"</code></pre></div>\n<p>단방향 바인딩은 대응 되는 데이터 모델 값이 변경되면 레이아웃 뷰의 값도 변경되지만 그 반대의 경우는 안된다. </p>\n<p>양방향 표현식은  <strong>@=</strong> 으로 선언하면 된다. 예시로 EditText 뷰 같은경우는 사용자가 다른 값을 입력하면 이것과 대응되는 데이터 모델의 값이 입력 값으로 변경된다.</p>\n<blockquote>\n<p>단향향 바인딩:  <strong>@로 사작하며 중괄호({}) 안에 표현식을 넣는다.</strong><br>\n양방향 바인딩: <strong>@=로 사작하며 중괄호({}) 안에 표현식을 넣는다.</strong> </p>\n</blockquote>\n<hr>\n<p>이제 다시 예시로 가서 바인딩 표현식을 레이아웃 파일에 바인딩 해준다. 첫 번째로 TextView의 ViewModel 의 result 값을 바인딩 해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TextView</span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@+id/resultText<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrap_content<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrap_content<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>@{safeUnbox(myViewModel.result) == 0.0 ? \"Enter value\" : String.valueOf(safeUnbox(myViewModel.result))}<span class=\"token punctuation\">'</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">app:</span>layout_constraintBottom_toBottomOf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parent<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">app:</span>layout_constraintEnd_toEndOf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parent<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">app:</span>layout_constraintStart_toStartOf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parent<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">app:</span>layout_constraintTop_toTopOf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parent<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>바인딩 표현식은 result값이 0이면 값을 입력하라고 \"Enter value\"로 알려주고 0이 아니면 환전된 값을 변환하여 사용자에게 보여준다.</p>\n<p>여기서 값이 변경되는것은 <strong>ViewModel의 값은 변경될 필요가 없기 때문에 단방향 바인딩</strong> 을 사용하였다. 반면에 사용자가 입력을하는 EditText 값은경우 <strong>사용자가 직전에 입력한 값으로 ViewModel의 값이 변경될 수 있도록(장치의 회전이 일어났을때 현재 값을 보여줘야한다.) 양방향 바인딩을 사용한다.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>EditText</span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@+id/dollarText<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrap_content<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrap_content<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_marginTop</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100dp<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>ems</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@={myViewModel.dollarValue}<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>inputType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>numberDecimal<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">app:</span>layout_constraintEnd_toEndOf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parent<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">app:</span>layout_constraintStart_toStartOf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parent<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">app:</span>layout_constraintTop_toTopOf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parent<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>마지막으로 Convert 버튼을 누르면 처음에 추가한 <strong>convertValue() 함수</strong> 를 호출하기 위해 바인딩 해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@+id/convertButton<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrap_content<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrap_content<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_marginTop</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50dp<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Convert<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>onClick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@{() -> myViewModel.convertValue()}<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">app:</span>layout_constraintEnd_toEndOf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parent<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">app:</span>layout_constraintStart_toStartOf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parent<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">app:</span>layout_constraintTop_toBottomOf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@+id/resultText<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>앱을 실행해보면 \"Enter value\" 메시지와 올바르게 환전이 되는지를 확인할 수 있다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/63226023/152167733-87c2d584-9059-46ae-82b4-849834117724.png\" width=\"21.5%\"> <img src=\"https://user-images.githubusercontent.com/63226023/152167779-94bd6551-938e-4a1b-9cf8-34537bcac9fe.png\" width=\"21%\"> <img src=\"https://user-images.githubusercontent.com/63226023/152167810-57480cd8-4dca-482a-b427-82d49c40f82f.png\" width=\"56%\"></p>\n<hr>\n<h1>References</h1>\n<ul>\n<li><a href=\"https://developer.android.com/topic/libraries/data-binding?hl=ko\">안드로이드 데이터 결합 라이브러리</a></li>\n</ul>","frontmatter":{"title":"안드로이드 DataBinding + LiveData 적용하기","date":"February 02, 2022","update":"February 02, 2022","tags":["Android","DataBinding","ACC"],"series":"Android"},"fields":{"slug":"/databinding/","readingTime":{"minutes":9.865}}},"seriesList":{"edges":[{"node":{"id":"6925146a-2b07-5bc9-9607-184a4e3c68c3","fields":{"slug":"/android-start/"},"frontmatter":{"title":"첫 안드로이드 개발에 대한 회고"}}},{"node":{"id":"a565c6a3-fcce-5c9a-ad4d-02af13741cf5","fields":{"slug":"/lifecycle/"},"frontmatter":{"title":"안드로이드 Lifecycle 제대로 알기"}}},{"node":{"id":"468a8f79-4ea8-5898-b283-757c8e875153","fields":{"slug":"/fragment/"},"frontmatter":{"title":"안드로이드 Fragment 사용"}}},{"node":{"id":"bb6db639-8e2b-5530-be8b-949a8b1760be","fields":{"slug":"/intent/"},"frontmatter":{"title":"안드로이드 인텐트의 개념"}}},{"node":{"id":"36ff293e-dde0-550d-aeb8-ec537b790e20","fields":{"slug":"/recyclerview/"},"frontmatter":{"title":"안드로이드 4대 컴포넌트란"}}},{"node":{"id":"797d9ee9-2c11-55bc-b727-4ae592506f62","fields":{"slug":"/android-context/"},"frontmatter":{"title":"안드로이드 Context의 개념"}}},{"node":{"id":"f324f418-379e-5586-bd19-dea6cc747952","fields":{"slug":"/broadcast/"},"frontmatter":{"title":"안드로이드 브로드캐스트(Broadcast)"}}},{"node":{"id":"1668e5f7-7335-5076-9f55-1bec5c8e40be","fields":{"slug":"/android-service/"},"frontmatter":{"title":"안드로이드 서비스(Service) 개요"}}},{"node":{"id":"0b7da456-386b-5c28-b4a8-fefb68cdff05","fields":{"slug":"/pendingintent/"},"frontmatter":{"title":"안드로이드 PendingIntent의 개념"}}},{"node":{"id":"75afba69-c4e6-5bef-ab1b-d9afad6a6115","fields":{"slug":"/notification/"},"frontmatter":{"title":"안드로이드 알림(Notification) 만들기"}}},{"node":{"id":"b8aadf5e-7f02-5e8d-a985-a514d4d23797","fields":{"slug":"/android-jetpack/"},"frontmatter":{"title":"안드로이드 Jetpack에 대해"}}},{"node":{"id":"3cb29f6c-c1ac-5e6b-806e-39b4dabde747","fields":{"slug":"/android-acc/"},"frontmatter":{"title":"안드로이드 MVVM 패턴과 ACC 알아보기"}}},{"node":{"id":"eb635b92-e487-54e6-ad67-e65845019036","fields":{"slug":"/viewmodel/"},"frontmatter":{"title":"안드로이드 Jetpack의 ViewModel 사용해보기"}}},{"node":{"id":"664bce30-45ec-5072-80a9-787c6e62e8a1","fields":{"slug":"/livedata/"},"frontmatter":{"title":"안드로이드 Jetpack의 LiveData 적용하기"}}},{"node":{"id":"98ef256e-b69d-550a-9092-ccea70762e3f","fields":{"slug":"/databinding/"},"frontmatter":{"title":"안드로이드 DataBinding + LiveData 적용하기"}}},{"node":{"id":"c555e79d-0c6c-55f6-bbe3-540d4870fbaa","fields":{"slug":"/coroutine/"},"frontmatter":{"title":"안드로이드 코루틴의 기초 알아보기"}}},{"node":{"id":"120e4269-fab9-56d3-a8c3-4eb27ff99dbc","fields":{"slug":"/room-database/"},"frontmatter":{"title":"안드로이드 Room 사용하면서 알아보기"}}},{"node":{"id":"a23c3328-e672-5cda-b982-a2a0b412559e","fields":{"slug":"/android-dagger2/"},"frontmatter":{"title":"안드로이드 Dagger2 맛보기"}}},{"node":{"id":"97bedaf5-babf-55d6-9af8-caf47bb169b6","fields":{"slug":"/android-dagger2-more/"},"frontmatter":{"title":"안드로이드 Dagger2 좀 더 알아가기"}}},{"node":{"id":"bb9a7240-98d9-538d-9224-6d110a0f0358","fields":{"slug":"/android-hilt/"},"frontmatter":{"title":"안드로이드 Hilt에 대해 알아보기"}}},{"node":{"id":"bf6ff02b-6b19-5062-a565-0d3f1955be42","fields":{"slug":"/repository-pattern/"},"frontmatter":{"title":"안드로이드 Repository 패턴은 무엇인가"}}},{"node":{"id":"8c9cfe55-c118-5907-b606-febd84308e2f","fields":{"slug":"/datastore/"},"frontmatter":{"title":"새로운 동료 DataStore 알아보기"}}},{"node":{"id":"1f43678a-5010-5917-beb2-ad59b1882a3b","fields":{"slug":"/android-diffutil/"},"frontmatter":{"title":"안드로이드 RecyclerView의 DiffUtil 알아보기"}}},{"node":{"id":"afd2b0e2-6cb5-5753-b370-ae59b99bcd30","fields":{"slug":"/viewpager2/"},"frontmatter":{"title":"안드로이드 ViewPager2 사용기"}}},{"node":{"id":"4f0c8d12-3fbe-52d0-95da-58b34e9359fb","fields":{"slug":"/runOnUiThread/"},"frontmatter":{"title":"안드로이드 runOnUiThread?"}}},{"node":{"id":"df647556-1bf0-55cc-af42-57acb7206e5f","fields":{"slug":"/android-launcher/"},"frontmatter":{"title":"안드로이드에서 Launcher를 통한 결과 전달"}}},{"node":{"id":"9e5d89dd-6d3c-5442-bf07-3b6dbf2b3bb1","fields":{"slug":"/android-menu/"},"frontmatter":{"title":"안드로이드 다양한 Menu들 사용하기"}}},{"node":{"id":"6412e19a-99a7-5938-90d1-7296a34757b2","fields":{"slug":"/android-sqlite/"},"frontmatter":{"title":"안드로이드 내부 데이터 저장 SQLite"}}},{"node":{"id":"c4fb68dc-0882-5bc8-8cf8-1e4bcb82d690","fields":{"slug":"/android-permission/"},"frontmatter":{"title":"안드로이드 Permission 가져오기"}}},{"node":{"id":"d5df013b-8ddd-5c33-ab15-38ddacceb71e","fields":{"slug":"/android-local-service/"},"frontmatter":{"title":"안드로이드 Local Service 알아보기"}}},{"node":{"id":"c3641eee-48c5-5870-a5d1-26d1401311e7","fields":{"slug":"/android-fragment/"},"frontmatter":{"title":"안드로이드 Fragment 조각내기"}}},{"node":{"id":"f0a71dbc-6c77-52e0-a749-cc19dbc1b8b3","fields":{"slug":"/livedata-transform/"},"frontmatter":{"title":"안드로이드 MediatorLiveData와 Transformations"}}},{"node":{"id":"ffdd7d7b-34ae-58f8-87f8-7c6c6513ddf5","fields":{"slug":"/android-navigation/"},"frontmatter":{"title":"안드로이드 Navigation 사용하기"}}},{"node":{"id":"38730b0e-28e4-544e-a8db-aad5668516cc","fields":{"slug":"/compose-start/"},"frontmatter":{"title":"안드로이드 Compose 알아보기"}}},{"node":{"id":"f3301d6b-63a2-5b07-b6cb-473f6ec13c7e","fields":{"slug":"/compose-lifecycle/"},"frontmatter":{"title":"안드로이드 Compose 수명 주기"}}},{"node":{"id":"a3a56595-ff49-5d63-b85a-4db183a541b5","fields":{"slug":"/compose-state-hoisting/"},"frontmatter":{"title":"안드로이드 Compose 상태 호이스팅"}}},{"node":{"id":"b7fcd3ce-4e92-52fe-ba70-ada12c9ac982","fields":{"slug":"/compose-side-effect/"},"frontmatter":{"title":"안드로이드 Side Effect란?"}}},{"node":{"id":"57cc52b2-25b0-56fa-92d8-91e55927e81b","fields":{"slug":"/android-version-catalog/"},"frontmatter":{"title":"안드로이드 Version Catalog 도입하기"}}},{"node":{"id":"24c2c48e-3290-5d58-b125-033c68f50682","fields":{"slug":"/android-webview/"},"frontmatter":{"title":"안드로이드 WebView로 웹과 놀기"}}},{"node":{"id":"1da187ef-bc7f-5929-b60f-7ddda78148d4","fields":{"slug":"/compose-theme/"},"frontmatter":{"title":"Compose 나만의 Custom Theme 설정하기"}}},{"node":{"id":"a6e75dd2-49dc-5b27-9a47-308a25586348","fields":{"slug":"/compose-bezier/"},"frontmatter":{"title":"Compose에서 Bezier 곡선으로 스쿼클 만들기"}}}]},"previous":{"fields":{"slug":"/livedata/"},"frontmatter":{"title":"안드로이드 Jetpack의 LiveData 적용하기"}},"next":{"fields":{"slug":"/programmers-kakao-blind-2018-1/"},"frontmatter":{"title":"프로그래머스 2018 KAKAO RECRUITMENT - [1차]캐시"}}},"pageContext":{"id":"98ef256e-b69d-550a-9092-ccea70762e3f","series":"Android","previousPostId":"664bce30-45ec-5072-80a9-787c6e62e8a1","nextPostId":"e39e5fd5-6c40-5260-b245-d291e7d62b55"}},"staticQueryHashes":[],"slicesMap":{}}