{"componentChunkName":"component---src-templates-post-jsx","path":"/android-webview/","result":{"data":{"site":{"siteMetadata":{"title":"ppeper🥤"}},"markdownRemark":{"id":"24c2c48e-3290-5d58-b125-033c68f50682","excerpt":"WebView 모바일 앱을 사용하다 보면 웹으로 리다이렉트 하거나 웹 페이지를 보여주는 화면들을 많이 볼 수 있다. 앱에서 웹페이지를 보여줄 수 있는 웹뷰를 사용하기 위해서는 안드로이드에서 WebView 를 사용하여 여러가지 옵션을 설정하고 웹 페이지와 상호작용 할 수 있다. 기본적으로 WebView를 사용하기 위해서는 안드로이드에서 Internet 퍼미…","html":"<h1>WebView</h1>\n<p>모바일 앱을 사용하다 보면 웹으로 리다이렉트 하거나 웹 페이지를 보여주는 화면들을 많이 볼 수 있다. 앱에서 웹페이지를 보여줄 수 있는 웹뷰를 사용하기 위해서는 안드로이드에서 <strong>WebView</strong> 를 사용하여 여러가지 옵션을 설정하고 웹 페이지와 상호작용 할 수 있다.</p>\n<p>기본적으로 WebView를 사용하기 위해서는 안드로이드에서 Internet 퍼미션을 설정해야 한다. WebView는 간단하게 xml에서 WebView tag를 추가해 주면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>uses-permission</span> <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>android.permission.INTERNET<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>WebView</span>\n    <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@+id/wvContent<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0dp<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>layout_height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0dp<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\"><span class=\"token namespace\">app:</span>layout_constraintBottom_toBottomOf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parent<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\"><span class=\"token namespace\">app:</span>layout_constraintEnd_toEndOf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parent<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\"><span class=\"token namespace\">app:</span>layout_constraintStart_toStartOf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parent<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\"><span class=\"token namespace\">app:</span>layout_constraintTop_toTopOf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parent<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>WebView를 사용하기 위한 준비는 간단하게 끝났다. 하지만 결국 WebView에서 모바일의 특정 화면을 보여주거나 다른 인터렉션들의 기능들이 필요할 것 이다. 안드로이드에서는 <code class=\"language-text\">WebViewClient</code>, <code class=\"language-text\">WebChromeClient</code>, <code class=\"language-text\">Settings</code> 을 통해 다양한 옵션들과 기능을 사용할 수 있다.</p>\n<blockquote>\n<p>WebViewClient: 웹페이지를 로딩할 때 생기는 콜백함수로 구성</p>\n<ul>\n<li>onPageStarted: 페이지가 처음 로딩될 떄 호출된다.</li>\n<li>onPageFinished: 페이지 로딩이 끝나면 호출된다.</li>\n<li>shouldOverridingUrlLoading: 웹뷰에서 URL이 로딩이 될 때 호출된다. 해당 함수로 URL을 앱에서 제어 할수 있다.</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>WebChromeClient: 웹페이지에서 일어나는 액션을 관리</p>\n<ul>\n<li>onCreateWindow: 웹에서 새 창을 열때 호출된다.</li>\n<li>onCloseWindow: 웹뷰가 창을 닫을 때 호출된다.</li>\n<li>onProgressChanged: 페이지가 로딩되는 중간에 호출된다.</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>Settings: 다양한 웹뷰에 관한 설정 가능 (ex: javaScriptEnabled)</p>\n</blockquote>\n<p>지금까지 살펴본 웹뷰를 간단하게 웹에서 버튼을 눌러 안드로이드에서 Toast 메시지를 보여주는 예시를 통해 알아보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">class</span> MainActivity <span class=\"token operator\">:</span> <span class=\"token function\">AppCompatActivity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> binding <span class=\"token keyword\">by</span> lazy <span class=\"token punctuation\">{</span>\n        ActivityMainBinding<span class=\"token punctuation\">.</span><span class=\"token function\">inflate</span><span class=\"token punctuation\">(</span>layoutInflater<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation builtin\">@SuppressLint</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"SetJavaScriptEnabled\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token operator\">:</span> Bundle<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span>\n        <span class=\"token function\">setContentView</span><span class=\"token punctuation\">(</span>binding<span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">)</span>\n        binding<span class=\"token punctuation\">.</span>wvContent<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span> <span class=\"token punctuation\">{</span>\n            settings<span class=\"token punctuation\">.</span>javaScriptEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// 자바스크립트를 사용하기 위한 설정 값</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">toast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        Toast<span class=\"token punctuation\">.</span><span class=\"token function\">makeText</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"test\"</span></span><span class=\"token punctuation\">,</span> Toast<span class=\"token punctuation\">.</span>LENGTH_SHORT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    \n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>🌉 브릿지</h2>\n<p>웹에서도 다양한 버튼과 이벤트들을 호출해주는 View가 있을 것이다. 해당하는 웹뷰와 웹 페이지 간에 상호 작용을 도와 주는 메커니즘을 <strong>브릿지</strong> 라고 한다.</p>\n<p>WebView에서는 네이티브 코드와 웹 페이지의 JavaScript 코드 간의 통신을 지원하기 위해 브릿지를 사용한다. 브릿지는 <code class=\"language-text\">@JavascriptInterface</code> 어노테이션을 함수에 붙여 생성하고 이에 대한 브릿지 함수를 <code class=\"language-text\">addJavascriptInterface</code> 함수를 통해 브릿지를 설정할 수 있다.</p>\n<p>모바일과 웹뷰간에 인터렉션을 처리하기 위해서는  <strong>@JavascriptInterface</strong> 어노테이션을 통하여 웹 페이지 간에 상호작용을 할 수 있다. 이를 통해 JavaScript 코드에서 안드로이드의 Kotlin 코드를 호출하거나, 반대릐 경우를 호출할 수 있다. 예시로 안드로이드에서 toast 메시지를 띄우기 위해 다음과 같이 코드를 작성해 준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">class</span> <span class=\"token function\">WebBridge</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> onClickMessage<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> Unit\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation builtin\">@JavascriptInterface</span>\n    <span class=\"token keyword\">fun</span> <span class=\"token function\">showMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        onClickMessage<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">.</span>\n<span class=\"token annotation builtin\">@SuppressLint</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"SetJavaScriptEnabled\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token operator\">:</span> Bundle<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setContentView</span><span class=\"token punctuation\">(</span>binding<span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">)</span>\n    binding<span class=\"token punctuation\">.</span>wvContent<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span> <span class=\"token punctuation\">{</span>\n        settings<span class=\"token punctuation\">.</span>javaScriptEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// 자바스크립트를 사용하기 위한 설정 값</span>\n        <span class=\"token function\">addJavascriptInterface</span><span class=\"token punctuation\">(</span><span class=\"token function\">WebBride</span><span class=\"token punctuation\">(</span><span class=\"token operator\">::</span>toast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Android\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>해당 코드는 예시로 사용하기 위해 안드로이드의 <code class=\"language-text\">assets</code> 폴더에 <code class=\"language-text\">toast.html</code> 로 넣어 둔다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>토스트 버튼<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onClick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">showAndroidToast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n            <span class=\"token keyword\">function</span> <span class=\"token function\">showAndroidToast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                Android<span class=\"token punctuation\">.</span><span class=\"token function\">showMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>위에서 addJavaScriptInterface 함수에서 지정하였던 \"Android\" 와 함수의 이름과 맞게 호출하면 된다.</p>\n<img src=\"https://github.com/ppeper/Kotlin_Algorithm/assets/63226023/a4bc6aaa-3a3c-4f2c-8c61-d6381b86cf03\">\n<hr>\n<h1>References</h1>\n<ul>\n<li><a href=\"https://developer.android.com/develop/ui/views/layout/webapps/webview?hl=ko\">WebView에서 웹 앱 개발</a></li>\n</ul>","frontmatter":{"title":"안드로이드 WebView로 웹과 놀기","date":"November 20, 2023","update":"November 20, 2023","tags":["Android","Webview"],"series":"Android"},"fields":{"slug":"/android-webview/","readingTime":{"minutes":4.71}}},"seriesList":{"edges":[{"node":{"id":"6925146a-2b07-5bc9-9607-184a4e3c68c3","fields":{"slug":"/android-start/"},"frontmatter":{"title":"첫 안드로이드 개발에 대한 회고"}}},{"node":{"id":"a565c6a3-fcce-5c9a-ad4d-02af13741cf5","fields":{"slug":"/lifecycle/"},"frontmatter":{"title":"안드로이드 Lifecycle 제대로 알기"}}},{"node":{"id":"468a8f79-4ea8-5898-b283-757c8e875153","fields":{"slug":"/fragment/"},"frontmatter":{"title":"안드로이드 Fragment 사용"}}},{"node":{"id":"bb6db639-8e2b-5530-be8b-949a8b1760be","fields":{"slug":"/intent/"},"frontmatter":{"title":"안드로이드 인텐트의 개념"}}},{"node":{"id":"36ff293e-dde0-550d-aeb8-ec537b790e20","fields":{"slug":"/recyclerview/"},"frontmatter":{"title":"안드로이드 4대 컴포넌트란"}}},{"node":{"id":"797d9ee9-2c11-55bc-b727-4ae592506f62","fields":{"slug":"/android-context/"},"frontmatter":{"title":"안드로이드 Context의 개념"}}},{"node":{"id":"f324f418-379e-5586-bd19-dea6cc747952","fields":{"slug":"/broadcast/"},"frontmatter":{"title":"안드로이드 브로드캐스트(Broadcast)"}}},{"node":{"id":"1668e5f7-7335-5076-9f55-1bec5c8e40be","fields":{"slug":"/android-service/"},"frontmatter":{"title":"안드로이드 서비스(Service) 개요"}}},{"node":{"id":"0b7da456-386b-5c28-b4a8-fefb68cdff05","fields":{"slug":"/pendingintent/"},"frontmatter":{"title":"안드로이드 PendingIntent의 개념"}}},{"node":{"id":"75afba69-c4e6-5bef-ab1b-d9afad6a6115","fields":{"slug":"/notification/"},"frontmatter":{"title":"안드로이드 알림(Notification) 만들기"}}},{"node":{"id":"b8aadf5e-7f02-5e8d-a985-a514d4d23797","fields":{"slug":"/android-jetpack/"},"frontmatter":{"title":"안드로이드 Jetpack에 대해"}}},{"node":{"id":"3cb29f6c-c1ac-5e6b-806e-39b4dabde747","fields":{"slug":"/android-acc/"},"frontmatter":{"title":"안드로이드 MVVM 패턴과 ACC 알아보기"}}},{"node":{"id":"eb635b92-e487-54e6-ad67-e65845019036","fields":{"slug":"/viewmodel/"},"frontmatter":{"title":"안드로이드 Jetpack의 ViewModel 사용해보기"}}},{"node":{"id":"664bce30-45ec-5072-80a9-787c6e62e8a1","fields":{"slug":"/livedata/"},"frontmatter":{"title":"안드로이드 Jetpack의 LiveData 적용하기"}}},{"node":{"id":"98ef256e-b69d-550a-9092-ccea70762e3f","fields":{"slug":"/databinding/"},"frontmatter":{"title":"안드로이드 DataBinding + LiveData 적용하기"}}},{"node":{"id":"c555e79d-0c6c-55f6-bbe3-540d4870fbaa","fields":{"slug":"/coroutine/"},"frontmatter":{"title":"안드로이드 코루틴의 기초 알아보기"}}},{"node":{"id":"120e4269-fab9-56d3-a8c3-4eb27ff99dbc","fields":{"slug":"/room-database/"},"frontmatter":{"title":"안드로이드 Room 사용하면서 알아보기"}}},{"node":{"id":"a23c3328-e672-5cda-b982-a2a0b412559e","fields":{"slug":"/android-dagger2/"},"frontmatter":{"title":"안드로이드 Dagger2 맛보기"}}},{"node":{"id":"97bedaf5-babf-55d6-9af8-caf47bb169b6","fields":{"slug":"/android-dagger2-more/"},"frontmatter":{"title":"안드로이드 Dagger2 좀 더 알아가기"}}},{"node":{"id":"bb9a7240-98d9-538d-9224-6d110a0f0358","fields":{"slug":"/android-hilt/"},"frontmatter":{"title":"안드로이드 Hilt에 대해 알아보기"}}},{"node":{"id":"bf6ff02b-6b19-5062-a565-0d3f1955be42","fields":{"slug":"/repository-pattern/"},"frontmatter":{"title":"안드로이드 Repository 패턴은 무엇인가"}}},{"node":{"id":"8c9cfe55-c118-5907-b606-febd84308e2f","fields":{"slug":"/datastore/"},"frontmatter":{"title":"새로운 동료 DataStore 알아보기"}}},{"node":{"id":"1f43678a-5010-5917-beb2-ad59b1882a3b","fields":{"slug":"/android-diffutil/"},"frontmatter":{"title":"안드로이드 RecyclerView의 DiffUtil 알아보기"}}},{"node":{"id":"afd2b0e2-6cb5-5753-b370-ae59b99bcd30","fields":{"slug":"/viewpager2/"},"frontmatter":{"title":"안드로이드 ViewPager2 사용기"}}},{"node":{"id":"4f0c8d12-3fbe-52d0-95da-58b34e9359fb","fields":{"slug":"/runOnUiThread/"},"frontmatter":{"title":"안드로이드 runOnUiThread?"}}},{"node":{"id":"df647556-1bf0-55cc-af42-57acb7206e5f","fields":{"slug":"/android-launcher/"},"frontmatter":{"title":"안드로이드에서 Launcher를 통한 결과 전달"}}},{"node":{"id":"9e5d89dd-6d3c-5442-bf07-3b6dbf2b3bb1","fields":{"slug":"/android-menu/"},"frontmatter":{"title":"안드로이드 다양한 Menu들 사용하기"}}},{"node":{"id":"c4fb68dc-0882-5bc8-8cf8-1e4bcb82d690","fields":{"slug":"/android-permission/"},"frontmatter":{"title":"안드로이드 Permission 가져오기"}}},{"node":{"id":"6412e19a-99a7-5938-90d1-7296a34757b2","fields":{"slug":"/android-sqlite/"},"frontmatter":{"title":"안드로이드 내부 데이터 저장 SQLite"}}},{"node":{"id":"d5df013b-8ddd-5c33-ab15-38ddacceb71e","fields":{"slug":"/android-local-service/"},"frontmatter":{"title":"안드로이드 Local Service 알아보기"}}},{"node":{"id":"c3641eee-48c5-5870-a5d1-26d1401311e7","fields":{"slug":"/android-fragment/"},"frontmatter":{"title":"안드로이드 Fragment 조각내기"}}},{"node":{"id":"f0a71dbc-6c77-52e0-a749-cc19dbc1b8b3","fields":{"slug":"/livedata-transform/"},"frontmatter":{"title":"안드로이드 MediatorLiveData와 Transformations"}}},{"node":{"id":"ffdd7d7b-34ae-58f8-87f8-7c6c6513ddf5","fields":{"slug":"/android-navigation/"},"frontmatter":{"title":"안드로이드 Navigation 사용하기"}}},{"node":{"id":"38730b0e-28e4-544e-a8db-aad5668516cc","fields":{"slug":"/compose-start/"},"frontmatter":{"title":"안드로이드 Compose 알아보기"}}},{"node":{"id":"f3301d6b-63a2-5b07-b6cb-473f6ec13c7e","fields":{"slug":"/compose-lifecycle/"},"frontmatter":{"title":"안드로이드 Compose 수명 주기"}}},{"node":{"id":"a3a56595-ff49-5d63-b85a-4db183a541b5","fields":{"slug":"/compose-state-hoisting/"},"frontmatter":{"title":"안드로이드 Compose 상태 호이스팅"}}},{"node":{"id":"b7fcd3ce-4e92-52fe-ba70-ada12c9ac982","fields":{"slug":"/compose-side-effect/"},"frontmatter":{"title":"안드로이드 Side Effect란?"}}},{"node":{"id":"57cc52b2-25b0-56fa-92d8-91e55927e81b","fields":{"slug":"/android-version-catalog/"},"frontmatter":{"title":"안드로이드 Version Catalog 도입하기"}}},{"node":{"id":"24c2c48e-3290-5d58-b125-033c68f50682","fields":{"slug":"/android-webview/"},"frontmatter":{"title":"안드로이드 WebView로 웹과 놀기"}}},{"node":{"id":"1da187ef-bc7f-5929-b60f-7ddda78148d4","fields":{"slug":"/compose-theme/"},"frontmatter":{"title":"Compose 나만의 Custom Theme 설정하기"}}},{"node":{"id":"a6e75dd2-49dc-5b27-9a47-308a25586348","fields":{"slug":"/compose-bezier/"},"frontmatter":{"title":"Compose에서 Bezier 곡선으로 스쿼클 만들기"}}},{"node":{"id":"bc850df8-7668-542d-896a-6380a5c90b44","fields":{"slug":"/multipart/"},"frontmatter":{"title":"Ktor와 Multipart로 파일 업로드 근데 이제 Ktrofit을 곁들인"}}}]},"previous":{"fields":{"slug":"/android-version-catalog/"},"frontmatter":{"title":"안드로이드 Version Catalog 도입하기"}},"next":{"fields":{"slug":"/gradle-plugins/"},"frontmatter":{"title":"Gradle Convention Plugin 생성 및 적용하기"}}},"pageContext":{"id":"24c2c48e-3290-5d58-b125-033c68f50682","series":"Android","previousPostId":"57cc52b2-25b0-56fa-92d8-91e55927e81b","nextPostId":"948ca575-8d23-5404-b116-817c6e8d6f84"}},"staticQueryHashes":[],"slicesMap":{}}