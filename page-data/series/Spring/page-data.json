{"componentChunkName":"component---src-templates-series-jsx","path":"/series/Spring/","result":{"data":{"posts":{"nodes":[{"excerpt":"스프링 등장 배경 스프링 프레임워크는 자바 플랫폼을 위한 오픈 소스 애플리케이션 프레임워크이다. 스프링이 등장하기 이전에는 EJB (Enterprise JavaBeans) 를 포함한 J2EE(Java 2 Platform, Enterprise Edition) 기반의 애플리케이션 개발이 주류였다. 하지만 EJB의 불편한 API와 높은 부하, 복잡한 구성 등의…","fields":{"slug":"/spring-basic/"},"frontmatter":{"date":"February 18, 2023","update":"Feb 18, 2023","title":"스프링 프레임워크의 등장","tags":["Java","Spring"]}},{"excerpt":"IoC(제어의 역전) Dependency Injection 에서 보았던 자바에서의 객체 간의 결합도가 강하게 되면 클래스와 결합된 다른 클래스도 같이 유지보수 되어야 할 가능성이 높아지게 된다. IoC(제어의 역전)은 이름과 같이 제어하는 주체가 바뀌었다는 의미로 프로그램의 제어 흐름을 개발자가 제어권을 갖지 않고 외부에서 결정 하는 것을 말한다. 이러한…","fields":{"slug":"/spring-ioc/"},"frontmatter":{"date":"February 19, 2023","update":"Feb 19, 2023","title":"스프링 IoC와 컨테이너 알아보기","tags":["Java","Spring"]}},{"excerpt":"Model-View-Controller (MVC) MVVM과 MVC의 패턴의 차이를 알아보면서 간단히 보았던 MVC 아키텍처 패턴은 애플리케이션의 확장을 위해 세가지 영역(Model, View, Controller)으로 분리 한 것으로 이러한 Model 2(Web MVC) 아키텍처 패턴은 화면과 비지니스 로직을 분리해서 작업하기 때문에 확장성이 뛰어나고,…","fields":{"slug":"/spring-mvc/"},"frontmatter":{"date":"February 22, 2023","update":"Feb 22, 2023","title":"Spring Web MVC 프레임워크 보기","tags":["Spring","MVC"]}},{"excerpt":"스프링 부트 기존의 스프링은 자바 기반의 프레임워크로 애플리케이션을 개발하려면 사전에 많은 작업(library, dependency 추가등) 을 해야 했다. 스프링 부트는 개발자들이 더욱 쉽게 스프링 애플리케이션을 개발할 수 있도록 도와준다. 스프링 부트는 스프링 프레임워크와 마찬가지로 이나 과 같은 빌드 도구를 사용하고, Tomcat, Jetty, Un…","fields":{"slug":"/springboot/"},"frontmatter":{"date":"February 25, 2023","update":"Feb 25, 2023","title":"스프링을 편하게 스프링 부트를 사용해보자","tags":["Spring Boot"]}}]}},"pageContext":{"series":"Spring"}},"staticQueryHashes":[],"slicesMap":{}}