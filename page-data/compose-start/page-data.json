{"componentChunkName":"component---src-templates-post-jsx","path":"/compose-start/","result":{"data":{"site":{"siteMetadata":{"title":"ppeper🥤"}},"markdownRemark":{"id":"296e6b82-b35b-537d-a5a5-48d5d053235c","excerpt":"최근에 Compose를 적용하여 프로젝트를 진행하면서 하나씩 만들어 보았는데 해당 내용들을 정리해 보려고 한다. Compose Compose는 Kotlin언어를 사용하여  방식으로 UI를 그리는 방식으로 기존의 xml의 방식과는 차이가 있다. Compose를 사용하면 아래와 같은 장점이 있다. 코드 감소 Kotlin, xml로 나눠서 개발하는 것이 아닌 …","html":"<img src=\"https://github.com/ppeper/Kotlin_Algorithm/assets/63226023/16e97d30-b69e-4621-b022-94f1e8184b24\">\n<p>최근에 Compose를 적용하여 프로젝트를 진행하면서 하나씩 만들어 보았는데 해당 내용들을 정리해 보려고 한다.</p>\n<hr>\n<h1>Compose</h1>\n<p>Compose는 Kotlin언어를 사용하여 <code class=\"language-text\">선언형 프로그래밍</code> 방식으로 UI를 그리는 방식으로 기존의 xml의 방식과는 차이가 있다.</p>\n<p>Compose를 사용하면 아래와 같은 장점이 있다.</p>\n<ul>\n<li>\n<p><strong>코드 감소</strong></p>\n<ul>\n<li>Kotlin, xml로 나눠서 개발하는 것이 아닌 Kotlin 언어만으로 개발이 가능하다.</li>\n</ul>\n</li>\n<li>선언적 API를 사용하여 <strong>직관적</strong> 이다.</li>\n<li>\n<p><strong>빠른 개발 과정</strong></p>\n<ul>\n<li>Compose는 기존의 모든 코드와 호환되고 Compose에서 Views를, Views에서 Compose 코드를 호출할 수 있다.</li>\n</ul>\n</li>\n<li><strong>강력한 성능</strong></li>\n</ul>\n<h2>@Composable</h2>\n<ul>\n<li>구성가능한 함수는 @Composable annotation이 달린 일반함수</li>\n<li>Compose 함수는 대문자로 시작하도록 가이드 한다.</li>\n</ul>\n<h2>@Preview</h2>\n<ul>\n<li>적용된 화면을 미리보기 가능</li>\n</ul>\n<h1>Row, Column, Box</h1>\n<img src=\"https://github.com/ppeper/Kotlin_Algorithm/assets/63226023/35e94a8a-b88e-4385-8984-219535d9b570\">\n<p>Compose의 기본적인 Layout은 다음과 같이 세가지가 있다. <code class=\"language-text\">Row</code>와 <code class=\"language-text\">Column</code>은 xml에서 LinearLayout,<br>\n<code class=\"language-text\">Box</code>는 FrameLayout으로 볼 수 있다.</p>\n<h2>Row</h2>\n<ul>\n<li>Row는 행으로 UI가 배치되는 Layout이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token annotation builtin\">@Preview</span>\n<span class=\"token annotation builtin\">@Composable</span>\n<span class=\"token keyword\">fun</span> <span class=\"token function\">PreviewMyRow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Row <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Test1\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Test2\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Test3\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<img src=\"https://github.com/ppeper/Kotlin_Algorithm/assets/63226023/f23f636d-dbd1-4d9e-87ae-dd504564f40b\">\n<h2>Column</h2>\n<ul>\n<li>Colunm는 열로 UI가 배치되는 Layout이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token annotation builtin\">@Preview</span>\n<span class=\"token annotation builtin\">@Composable</span>\n<span class=\"token keyword\">fun</span> <span class=\"token function\">PreviewMyColumn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Column <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Test1\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Test2\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Test3\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<img src=\"https://github.com/ppeper/Kotlin_Algorithm/assets/63226023/c524cd0b-8796-4f23-92fe-48f7023ae14a\">\n<h2>Box</h2>\n<ul>\n<li>Box는 위젯을 다른 화면 위에 배치시키는 Layout이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token annotation builtin\">@Preview</span>\n<span class=\"token annotation builtin\">@Composable</span>\n<span class=\"token keyword\">fun</span> <span class=\"token function\">PreviewMyBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Box</span><span class=\"token punctuation\">(</span>\n        modifier <span class=\"token operator\">=</span> Modifier<span class=\"token punctuation\">.</span><span class=\"token function\">fillMaxWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 화면 너비 꽉 채우기</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">.</span>dp<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 높이 200dp 설정</span>\n    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>modifier <span class=\"token operator\">=</span> Modifier<span class=\"token punctuation\">.</span><span class=\"token function\">align</span><span class=\"token punctuation\">(</span>Alignment<span class=\"token punctuation\">.</span>TopStart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> text <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Test1\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>modifier <span class=\"token operator\">=</span> Modifier<span class=\"token punctuation\">.</span><span class=\"token function\">align</span><span class=\"token punctuation\">(</span>Alignment<span class=\"token punctuation\">.</span>Center<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> text <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Test2\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>modifier <span class=\"token operator\">=</span> Modifier<span class=\"token punctuation\">.</span><span class=\"token function\">align</span><span class=\"token punctuation\">(</span>Alignment<span class=\"token punctuation\">.</span>BottomEnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> text <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Test3\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<img src=\"https://github.com/ppeper/Kotlin_Algorithm/assets/63226023/65d9bbc1-5fa1-4e3d-81c4-e0c521326948\">\n<blockquote>\n<p>🧐 위에서 Modifer와 align은 무엇일까?</p>\n</blockquote>\n<h2>Modifier</h2>\n<ul>\n<li>Surface, Text와 같은 대부분의 Compose UI Component는 modifier 매개변수를 선택적으로 허용한다.</li>\n<li>Modifier는 상위 Component Layout내에서 UI요소가 배치되고 표시괴는 동작 방식을 지정한다.</li>\n</ul>\n<h2>정렬 (Alignment)</h2>\n<ul>\n<li>\n<p>Column, Row에서의 Alignment</p>\n<ul>\n<li>Column: <code class=\"language-text\">Start</code>, <code class=\"language-text\">CenterHorizontally</code>, <code class=\"language-text\">End</code></li>\n<li>Row: <code class=\"language-text\">Top</code>, <code class=\"language-text\">CenterVertically</code>, <code class=\"language-text\">Bottom</code></li>\n</ul>\n</li>\n<li>\n<p>Box에서 Alignment</p>\n<ul>\n<li><code class=\"language-text\">TopStart</code></li>\n<li><code class=\"language-text\">TopCenter</code></li>\n<li><code class=\"language-text\">TopEnd</code></li>\n<li><code class=\"language-text\">CenterStart</code></li>\n<li><code class=\"language-text\">Center</code></li>\n<li><code class=\"language-text\">CenterEnd</code></li>\n<li><code class=\"language-text\">BottomStart</code></li>\n<li><code class=\"language-text\">BottomCenter</code></li>\n<li><code class=\"language-text\">BottomEnd</code></li>\n</ul>\n</li>\n</ul>\n<h2>배치 (Arrangement)</h2>\n<img src=\"https://github.com/ppeper/Kotlin_Algorithm/assets/63226023/0c49feda-906c-491f-8276-c075b901445f\">\n<p>📌 정렬과 배치를 사용하면 원하는대로 UI를 구성할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token annotation builtin\">@Composable</span>\n<span class=\"token keyword\">fun</span> <span class=\"token function\">MyRow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Row</span><span class=\"token punctuation\">(</span>\n        modifier <span class=\"token operator\">=</span> Modifier<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">.</span>dp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        horizontalArrangement <span class=\"token operator\">=</span> Arrangement<span class=\"token punctuation\">.</span>SpaceAround<span class=\"token punctuation\">,</span>\n        verticalAlignment <span class=\"token operator\">=</span> Alignment<span class=\"token punctuation\">.</span>Bottom\n    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Test1\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Test2\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Test3\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<img src=\"https://github.com/ppeper/Kotlin_Algorithm/assets/63226023/7dfc0090-c96d-4768-b9e0-d54f19cf2c29\">\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token annotation builtin\">@Preview</span>\n<span class=\"token annotation builtin\">@Composable</span>\n<span class=\"token keyword\">fun</span> <span class=\"token function\">PreviewMyColumn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Column</span><span class=\"token punctuation\">(</span>\n        modifier <span class=\"token operator\">=</span> Modifier<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">.</span>dp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        verticalArrangement <span class=\"token operator\">=</span> Arrangement<span class=\"token punctuation\">.</span>SpaceBetween<span class=\"token punctuation\">,</span>\n        horizontalAlignment <span class=\"token operator\">=</span> Alignment<span class=\"token punctuation\">.</span>Start\n    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Test1\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Test2\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>text <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"Test3\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<img src=\"https://github.com/ppeper/Kotlin_Algorithm/assets/63226023/aac7917f-ee2c-4bbe-b7ef-3e217bbdc055\">\n<hr>\n<h1>References</h1>\n<ul>\n<li><a href=\"https://developer.android.com/jetpack/compose?gclid=CjwKCAjwloynBhBbEiwAGY25dNfCR8uKXeCY7EMNwc06CxF06lWnhhGDpVKV0SLdpeEGcB9cCrxnkhoCKn8QAvD_BwE&#x26;gclsrc=aw.ds&#x26;hl=ko\">Jetpack Compose로 더 빠르게 더 나은 Android 앱 빌드</a></li>\n</ul>","frontmatter":{"title":"안드로이드 Compose 알아보기","date":"August 21, 2023","update":"August 21, 2023","tags":["Android","Compose"],"series":"Android"},"fields":{"slug":"/compose-start/","readingTime":{"minutes":3.32}}},"seriesList":{"edges":[{"node":{"id":"ec35f26c-1e41-5966-85a5-26fa93fb5998","fields":{"slug":"/android-start/"},"frontmatter":{"title":"첫 안드로이드 개발에 대한 회고"}}},{"node":{"id":"f0d5a7a2-4729-582b-85a5-b78dd0643477","fields":{"slug":"/lifecycle/"},"frontmatter":{"title":"안드로이드 Lifecycle 제대로 알기"}}},{"node":{"id":"c38cf2b3-111e-5e83-8623-c323546b3596","fields":{"slug":"/fragment/"},"frontmatter":{"title":"안드로이드 Fragment 사용"}}},{"node":{"id":"d0d74ae8-e541-598a-a0c8-30dbf6d27c14","fields":{"slug":"/intent/"},"frontmatter":{"title":"안드로이드 인텐트의 개념"}}},{"node":{"id":"7fddf3e0-5c6a-5813-b716-8b9348184adb","fields":{"slug":"/android-context/"},"frontmatter":{"title":"안드로이드 Context의 개념"}}},{"node":{"id":"da53b090-256e-5185-877e-1c63d36292dd","fields":{"slug":"/recyclerview/"},"frontmatter":{"title":"안드로이드 4대 컴포넌트란"}}},{"node":{"id":"76b96463-5dc0-5bce-9411-653b728c0d07","fields":{"slug":"/broadcast/"},"frontmatter":{"title":"안드로이드 브로드캐스트(Broadcast)"}}},{"node":{"id":"31f9951e-cfe2-5831-9791-bdd8a3f321f2","fields":{"slug":"/android-service/"},"frontmatter":{"title":"안드로이드 서비스(Service) 개요"}}},{"node":{"id":"9f0c308a-f26f-5882-b1c0-603d65208794","fields":{"slug":"/pendingintent/"},"frontmatter":{"title":"안드로이드 PendingIntent의 개념"}}},{"node":{"id":"6d7acb66-c296-5cb4-a56d-a6141652ba03","fields":{"slug":"/notification/"},"frontmatter":{"title":"안드로이드 알림(Notification) 만들기"}}},{"node":{"id":"dd38b1c0-3bb7-5d67-9871-c8a997f7665a","fields":{"slug":"/android-jetpack/"},"frontmatter":{"title":"안드로이드 Jetpack에 대해"}}},{"node":{"id":"4ae3792b-61e4-502c-997f-ea92464eb538","fields":{"slug":"/android-acc/"},"frontmatter":{"title":"안드로이드 MVVM 패턴과 ACC 알아보기"}}},{"node":{"id":"07f0687c-2335-5ce9-adbf-a9e3fdcdb964","fields":{"slug":"/viewmodel/"},"frontmatter":{"title":"안드로이드 Jetpack의 ViewModel 사용해보기"}}},{"node":{"id":"08c0cd05-8fe6-5461-8c79-629efa4d3099","fields":{"slug":"/livedata/"},"frontmatter":{"title":"안드로이드 Jetpack의 LiveData 적용하기"}}},{"node":{"id":"cd2c8fe7-7aa9-53d0-a66c-0157b8f0fdb5","fields":{"slug":"/databinding/"},"frontmatter":{"title":"안드로이드 DataBinding + LiveData 적용하기"}}},{"node":{"id":"567749b8-f03e-5f18-bf62-021e32de6506","fields":{"slug":"/coroutine/"},"frontmatter":{"title":"안드로이드 코루틴의 기초 알아보기"}}},{"node":{"id":"92a49d11-9d7c-5fc9-b5f7-9575ee1886ea","fields":{"slug":"/room-database/"},"frontmatter":{"title":"안드로이드 Room 사용하면서 알아보기"}}},{"node":{"id":"9b4e8bd5-b184-5972-b687-b5a509707a35","fields":{"slug":"/android-dagger2/"},"frontmatter":{"title":"안드로이드 Dagger2 맛보기"}}},{"node":{"id":"f3e41032-8577-5a04-bb96-62be1e0aaf4b","fields":{"slug":"/android-dagger2-more/"},"frontmatter":{"title":"안드로이드 Dagger2 좀 더 알아가기"}}},{"node":{"id":"5eb7df8d-a6a9-5e6c-a6a8-9e79a03cf5e8","fields":{"slug":"/android-hilt/"},"frontmatter":{"title":"안드로이드 Hilt에 대해 알아보기"}}},{"node":{"id":"c20926f6-1320-5a8c-9f4a-59e5892e6350","fields":{"slug":"/repository-pattern/"},"frontmatter":{"title":"안드로이드 Repository 패턴은 무엇인가"}}},{"node":{"id":"2469d97d-f2b6-544e-8ef9-20003ce2bd82","fields":{"slug":"/datastore/"},"frontmatter":{"title":"새로운 동료 DataStore 알아보기"}}},{"node":{"id":"388b7df4-d323-53ac-80ff-f4ad265a6077","fields":{"slug":"/android-diffutil/"},"frontmatter":{"title":"안드로이드 RecyclerView의 DiffUtil 알아보기"}}},{"node":{"id":"b3372752-9e81-5642-ae8e-179f5c6bc152","fields":{"slug":"/viewpager2/"},"frontmatter":{"title":"안드로이드 ViewPager2 사용기"}}},{"node":{"id":"6a3accf7-a0c8-5423-ab54-e336ed105d22","fields":{"slug":"/runOnUiThread/"},"frontmatter":{"title":"안드로이드 runOnUiThread?"}}},{"node":{"id":"5c4802cf-c4a3-5fde-9cde-044d3bf41c70","fields":{"slug":"/android-launcher/"},"frontmatter":{"title":"안드로이드에서 Launcher를 통한 결과 전달"}}},{"node":{"id":"1dde30d6-b5f2-5e8e-bed9-9b829ed73a22","fields":{"slug":"/android-menu/"},"frontmatter":{"title":"안드로이드 다양한 Menu들 사용하기"}}},{"node":{"id":"1247175f-4af3-5f8d-a78f-eddc0317b772","fields":{"slug":"/android-sqlite/"},"frontmatter":{"title":"안드로이드 내부 데이터 저장 SQLite"}}},{"node":{"id":"bf5f92c9-bce8-53e1-825f-5030efe6622a","fields":{"slug":"/android-permission/"},"frontmatter":{"title":"안드로이드 Permission 가져오기"}}},{"node":{"id":"02142718-5257-5488-b9d7-ce45ff8471b1","fields":{"slug":"/android-local-service/"},"frontmatter":{"title":"안드로이드 Local Service 알아보기"}}},{"node":{"id":"62ea7fd4-5557-5c1b-bced-0102a0ab8868","fields":{"slug":"/android-fragment/"},"frontmatter":{"title":"안드로이드 Fragment 조각내기"}}},{"node":{"id":"33da29ed-8ac4-5c3f-b024-3159e1da22b9","fields":{"slug":"/livedata-transform/"},"frontmatter":{"title":"안드로이드 MediatorLiveData와 Transformations"}}},{"node":{"id":"844abb8c-db3f-5c7a-b213-af7e4184750c","fields":{"slug":"/android-navigation/"},"frontmatter":{"title":"안드로이드 Navigation 사용하기"}}},{"node":{"id":"296e6b82-b35b-537d-a5a5-48d5d053235c","fields":{"slug":"/compose-start/"},"frontmatter":{"title":"안드로이드 Compose 알아보기"}}},{"node":{"id":"ac09eecc-30b4-525e-b40f-524fcc4dacc3","fields":{"slug":"/compose-lifecycle/"},"frontmatter":{"title":"안드로이드 Compose 수명 주기"}}},{"node":{"id":"8ecadfc1-855e-53a0-97cc-6594b192981b","fields":{"slug":"/compose-state-hoisting/"},"frontmatter":{"title":"안드로이드 Compose 상태 호이스팅"}}},{"node":{"id":"43f4b29f-ed51-5fc0-bf47-a7bdb00ae9d8","fields":{"slug":"/compose-side-effect/"},"frontmatter":{"title":"안드로이드 Side Effect란?"}}},{"node":{"id":"5bf017e2-3f6c-5f8a-b348-2b3586279023","fields":{"slug":"/android-version-catalog/"},"frontmatter":{"title":"안드로이드 Version Catalog 도입하기"}}},{"node":{"id":"d8ca9764-c28e-5491-b2d6-0f1fe3814612","fields":{"slug":"/android-webview/"},"frontmatter":{"title":"안드로이드 WebView로 웹과 놀기"}}},{"node":{"id":"9d857459-0fd2-5d37-8f39-eceec94e02b2","fields":{"slug":"/compose-theme/"},"frontmatter":{"title":"Compose 나만의 Custom Theme 설정하기"}}},{"node":{"id":"a483c66e-f6c8-5ab3-ad60-d36392c1e724","fields":{"slug":"/compose-bezier/"},"frontmatter":{"title":"Compose에서 Bezier 곡선으로 스쿼클 만들기"}}}]},"previous":{"fields":{"slug":"/android-navigation/"},"frontmatter":{"title":"안드로이드 Navigation 사용하기"}},"next":{"fields":{"slug":"/compose-lifecycle/"},"frontmatter":{"title":"안드로이드 Compose 수명 주기"}}},"pageContext":{"id":"296e6b82-b35b-537d-a5a5-48d5d053235c","series":"Android","previousPostId":"844abb8c-db3f-5c7a-b213-af7e4184750c","nextPostId":"ac09eecc-30b4-525e-b40f-524fcc4dacc3"}},"staticQueryHashes":[],"slicesMap":{}}