{"componentChunkName":"component---src-templates-post-jsx","path":"/compose-theme/","result":{"data":{"site":{"siteMetadata":{"title":"ppeper🥤"}},"markdownRemark":{"id":"bae61635-412c-5e43-8a7b-1eafe2722928","excerpt":"안드로이드에서는 Material Design을 사용하여 컬러를 적용하여 라이트, 다크모드를 지원하는 앱을 만들 수 있게 해주고 있습니다. 하지만 Material의 지정된 테마가 한정적이고, 디자이너가 만든 색상의 네임을 사용해야 하는 경우에는 사용자 지정 테마를 만들어야 합니다. 이번에 Compose에서 사용자 지정 테마를 적용하는 방법을 하나씩 살펴보도…","html":"<img src='https://github.com/ppeper/Kotlin_Algorithm/assets/63226023/3ee7a814-cc90-42ba-9411-6a20ff29c970'>\n<p>안드로이드에서는 Material Design을 사용하여 컬러를 적용하여 라이트, 다크모드를 지원하는 앱을 만들 수 있게 해주고 있습니다.</p>\n<p>하지만 Material의 지정된 테마가 한정적이고, 디자이너가 만든 색상의 네임을 사용해야 하는 경우에는 사용자 지정 테마를 만들어야 합니다. 이번에 Compose에서 사용자 지정 테마를 적용하는 방법을 하나씩 살펴보도록 하겠습니다!</p>\n<h1 id=\"-Compose-Theme\" style=\"position:relative;\"><a href=\"#-Compose-Theme\" aria-label=\" Compose Theme permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>📍 Compose Theme</h1>\n<p>안드로이드 스튜디오에서 기본적으로 Compose 프로젝트를 만들게 되면 <code class=\"language-text\">Color</code>, <code class=\"language-text\">Theme</code>, <code class=\"language-text\">Type</code>의 기본 값들이 생성되어 있습니다.</p>\n<h2 id=\"1-Color\" style=\"position:relative;\"><a href=\"#1-Color\" aria-label=\"1 Color permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>1. Color</h2>\n<p>앱에서 사용할 라이트,다크모드에 사용할 색상들을 지정하고 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> Purple80 <span class=\"token operator\">=</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFFD0BCFF</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">val</span> PurpleGrey80 <span class=\"token operator\">=</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFFCCC2DC</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">val</span> Pink80 <span class=\"token operator\">=</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFFEFB8C8</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> Purple40 <span class=\"token operator\">=</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFF6650a4</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">val</span> PurpleGrey40 <span class=\"token operator\">=</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFF625b71</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">val</span> Pink40 <span class=\"token operator\">=</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFF7D5260</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"2-Typography\" style=\"position:relative;\"><a href=\"#2-Typography\" aria-label=\"2 Typography permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>2. Typography</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token comment\">// Set of Material typography styles to start with</span>\n<span class=\"token keyword\">val</span> Typography <span class=\"token operator\">=</span> <span class=\"token function\">Typography</span><span class=\"token punctuation\">(</span>\n    bodyLarge <span class=\"token operator\">=</span> <span class=\"token function\">TextStyle</span><span class=\"token punctuation\">(</span>\n        fontFamily <span class=\"token operator\">=</span> FontFamily<span class=\"token punctuation\">.</span>Default<span class=\"token punctuation\">,</span>\n        fontWeight <span class=\"token operator\">=</span> FontWeight<span class=\"token punctuation\">.</span>Normal<span class=\"token punctuation\">,</span>\n        fontSize <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">.</span>sp<span class=\"token punctuation\">,</span>\n        lineHeight <span class=\"token operator\">=</span> <span class=\"token number\">24</span><span class=\"token punctuation\">.</span>sp<span class=\"token punctuation\">,</span>\n        letterSpacing <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">.</span>sp\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">..</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"3-Theme\" style=\"position:relative;\"><a href=\"#3-Theme\" aria-label=\"3 Theme permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>3. Theme</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> DarkColorScheme <span class=\"token operator\">=</span> <span class=\"token function\">darkColorScheme</span><span class=\"token punctuation\">(</span>\n    primary <span class=\"token operator\">=</span> Purple80<span class=\"token punctuation\">,</span>\n    secondary <span class=\"token operator\">=</span> PurpleGrey80<span class=\"token punctuation\">,</span>\n    tertiary <span class=\"token operator\">=</span> Pink80\n    <span class=\"token operator\">..</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> LightColorScheme <span class=\"token operator\">=</span> <span class=\"token function\">lightColorScheme</span><span class=\"token punctuation\">(</span>\n    primary <span class=\"token operator\">=</span> Purple40<span class=\"token punctuation\">,</span>\n    secondary <span class=\"token operator\">=</span> PurpleGrey40<span class=\"token punctuation\">,</span>\n    tertiary <span class=\"token operator\">=</span> Pink40\n    <span class=\"token operator\">..</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">Theme.kt</code> 에서는 라이트, 다크모드에서 사용할 ColorScheme가 지정되어 있습니다. 이 메소드에서는 parameter를 따로 채워주지 않으면 기본 값이 설정되게 됩니다.</p>\n<p>시스템의 모드에 따라 colors를 정의하고 <code class=\"language-text\">MaterialTheme</code>에 해당 인자들을 넘겨줘 사용하고 있다는 것을 볼 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token annotation builtin\">@Composable</span>\n<span class=\"token keyword\">fun</span> <span class=\"token function\">CustomTheme</span><span class=\"token punctuation\">(</span>\n    darkTheme<span class=\"token operator\">:</span> Boolean <span class=\"token operator\">=</span> <span class=\"token function\">isSystemInDarkTheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    dynamicColor<span class=\"token operator\">:</span> Boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    content<span class=\"token operator\">:</span> <span class=\"token annotation builtin\">@Composable</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> Unit\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">val</span> colorScheme <span class=\"token operator\">=</span> <span class=\"token keyword\">when</span> <span class=\"token punctuation\">{</span>\n        dynamicColor <span class=\"token operator\">&amp;&amp;</span> Build<span class=\"token punctuation\">.</span>VERSION<span class=\"token punctuation\">.</span>SDK_INT <span class=\"token operator\">>=</span> Build<span class=\"token punctuation\">.</span>VERSION_CODES<span class=\"token punctuation\">.</span>S <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">val</span> context <span class=\"token operator\">=</span> LocalContext<span class=\"token punctuation\">.</span>current\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>darkTheme<span class=\"token punctuation\">)</span> <span class=\"token function\">dynamicDarkColorScheme</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span> <span class=\"token keyword\">else</span> <span class=\"token function\">dynamicLightColorScheme</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n\n        darkTheme <span class=\"token operator\">-></span> DarkColorScheme\n        <span class=\"token keyword\">else</span> <span class=\"token operator\">-></span> LightColorScheme\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token function\">MaterialTheme</span><span class=\"token punctuation\">(</span>\n        colorScheme <span class=\"token operator\">=</span> colorScheme<span class=\"token punctuation\">,</span>\n        typography <span class=\"token operator\">=</span> Typography<span class=\"token punctuation\">,</span>\n        content <span class=\"token operator\">=</span> content\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"Theme-만들어보기\" style=\"position:relative;\"><a href=\"#Theme-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"Theme 만들어보기 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>Theme 만들어보기</h1>\n<p>위에서 봤던 컬러, 폰트등을 사용자 지정 테마로 만들어서 사용해 보도록 하겠습니다.</p>\n<p>먼저 Material에서 <code class=\"language-text\">lightColorScheme</code>, <code class=\"language-text\">darkColorScheme</code>을 사용했던 것과 같이 커스텀 ColorScheme를 만들어야 합니다.</p>\n<p>Color들이 시스템 모드에 맞게 변경된다면 Recomposition이 일어나야하므로 지정한 color들을 State로 감싸주는 작업이 필요합니다.</p>\n<h2 id=\"사용자-Color\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90-Color\" aria-label=\"사용자 Color permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>사용자 Color</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> primary <span class=\"token operator\">=</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFFB4BDE9</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">val</span> primaryDark <span class=\"token operator\">=</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFF6E81E4</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> background <span class=\"token operator\">=</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFFE2E2E2</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">val</span> backgroundDark <span class=\"token operator\">=</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFF3D3D3D</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token function\">CustomColorScheme</span><span class=\"token punctuation\">(</span>\n    primary<span class=\"token operator\">:</span> Color<span class=\"token punctuation\">,</span>\n    background<span class=\"token operator\">:</span> Color<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> primary <span class=\"token keyword\">by</span> <span class=\"token function\">mutableStateOf</span><span class=\"token punctuation\">(</span>primary<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">set</span>\n    <span class=\"token keyword\">var</span> background <span class=\"token keyword\">by</span> <span class=\"token function\">mutableStateOf</span><span class=\"token punctuation\">(</span>background<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">set</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">val</span> customLightColorScheme<span class=\"token operator\">:</span> RickColorScheme <span class=\"token keyword\">by</span> lazy <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">RickColorScheme</span><span class=\"token punctuation\">(</span>\n        primary <span class=\"token operator\">=</span> primary<span class=\"token punctuation\">,</span>\n        background <span class=\"token operator\">=</span> background<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">.</span>\n        <span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">val</span> customDarkColorScheme<span class=\"token operator\">:</span> RickColorScheme <span class=\"token keyword\">by</span> lazy <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">RickColorScheme</span><span class=\"token punctuation\">(</span>\n        primary <span class=\"token operator\">=</span> primaryDark<span class=\"token punctuation\">,</span>\n        background <span class=\"token operator\">=</span> backgroundDark<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">.</span>\n        <span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"사용자-Typography\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90-Typography\" aria-label=\"사용자 Typography permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>사용자 Typography</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> pretendard <span class=\"token operator\">=</span> <span class=\"token function\">FontFamily</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">Font</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">.</span>font<span class=\"token punctuation\">.</span>pretendard_regular<span class=\"token punctuation\">,</span> FontWeight<span class=\"token punctuation\">.</span>Normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Font</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">.</span>font<span class=\"token punctuation\">.</span>pretendard_medium<span class=\"token punctuation\">,</span> FontWeight<span class=\"token punctuation\">.</span>Medium<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Font</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">.</span>font<span class=\"token punctuation\">.</span>pretendard_semi_bold<span class=\"token punctuation\">,</span> FontWeight<span class=\"token punctuation\">.</span>SemiBold<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// FontFamily가 FontWeight에 따라 선택된다.</span>\n<span class=\"token keyword\">val</span> title01 <span class=\"token operator\">=</span> <span class=\"token function\">TextStyle</span><span class=\"token punctuation\">(</span>\n    fontSize <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">.</span>sp<span class=\"token punctuation\">,</span>\n    fontWeight <span class=\"token operator\">=</span> FontWeight<span class=\"token punctuation\">.</span>Bold<span class=\"token punctuation\">,</span>\n    fontFamily <span class=\"token operator\">=</span> pretendard\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> title02 <span class=\"token operator\">=</span> <span class=\"token function\">TextStyle</span><span class=\"token punctuation\">(</span>\n    fontSize <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">.</span>sp<span class=\"token punctuation\">,</span>\n    fontWeight <span class=\"token operator\">=</span> FontWeight<span class=\"token punctuation\">.</span>SemiBold<span class=\"token punctuation\">,</span>\n    fontFamily <span class=\"token operator\">=</span> pretendard\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">data</span> <span class=\"token keyword\">class</span> <span class=\"token function\">CustomTypography</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">val</span> title01<span class=\"token operator\">:</span> TextStyle <span class=\"token operator\">=</span> title01<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">val</span> title02<span class=\"token operator\">:</span> TextStyle <span class=\"token operator\">=</span> title02<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>만들어준 ColorScheme 및 Typography들은 <code class=\"language-text\">CompositionLocalProvider</code> 를 통해 제공할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token annotation builtin\">@Composable</span>\n<span class=\"token keyword\">fun</span> <span class=\"token function\">CustomTheme</span><span class=\"token punctuation\">(</span>\n    darkTheme<span class=\"token operator\">:</span> Boolean <span class=\"token operator\">=</span> <span class=\"token function\">isSystemInDarkTheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    content<span class=\"token operator\">:</span> <span class=\"token annotation builtin\">@Composable</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> Unit\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">val</span> typography <span class=\"token operator\">=</span> <span class=\"token function\">CustomTypography</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">val</span> currentColor <span class=\"token operator\">=</span> remember <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>darkTheme<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            customDarkColorScheme\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            customLightColorScheme\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">CompositionLocalProvider</span><span class=\"token punctuation\">(</span>\n        LocalColorScheme provides currentColor\n        LocalTypography provides typography\n    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ProvideTextStyle</span><span class=\"token punctuation\">(</span>typography<span class=\"token punctuation\">.</span>title01<span class=\"token punctuation\">,</span> content <span class=\"token operator\">=</span> content<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">val</span> LocalColorScheme <span class=\"token operator\">=</span> staticCompositionLocalOf <span class=\"token punctuation\">{</span> customLightColorScheme <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">val</span> LocalTypography <span class=\"token operator\">=</span> staticCompositionLocalOf <span class=\"token punctuation\">{</span> <span class=\"token function\">CustomTypography</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"테마-값-사용하기\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EB%A7%88-%EA%B0%92-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"테마 값 사용하기 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>테마 값 사용하기</h2>\n<p><strong>CompositionLocalProvider</strong> 로 주입된 color나 typography는 <code class=\"language-text\">LocalColorScheme.current</code> 를 통해 최신 값을 가져올 수 있습니다.</p>\n<p>이를 <code class=\"language-text\">object</code> 로 감싸 더 쉽게 사용할 수 있도록 만들어 줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">object</span> CustomTheme <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">val</span> colors<span class=\"token operator\">:</span> CustomColorScheme\n        <span class=\"token annotation builtin\">@Composable</span>\n        <span class=\"token annotation builtin\">@ReadOnlyComposable</span>\n        <span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> LocalColorScheme<span class=\"token punctuation\">.</span>current\n\n    <span class=\"token keyword\">val</span> typography<span class=\"token operator\">:</span> CustomTypography\n        <span class=\"token annotation builtin\">@Composable</span>\n        <span class=\"token annotation builtin\">@ReadOnlyComposable</span>\n        <span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> LocalTypography<span class=\"token punctuation\">.</span>current\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>@ReadOnlyComposable : 읽기에 최적화되게 만들어주는 어노테이션</p>\n</blockquote>\n<p>간단에게 테스트를 위해 color값을 설정해 보면 시스템 모드에 따라 색상이 설정되는 것을 볼 수 있습니다 👋🏼</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token function\">Column</span><span class=\"token punctuation\">(</span>\n    modifier <span class=\"token operator\">=</span> modifier\n        <span class=\"token punctuation\">.</span><span class=\"token function\">fillMaxSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">background</span><span class=\"token punctuation\">(</span>color <span class=\"token operator\">=</span> CustomTheme<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">..</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<img src='https://github.com/ppeper/Kotlin_Algorithm/assets/63226023/09855cf3-7793-42a8-ab19-441ce43df544'>\n<hr>\n<h1 id=\"References\" style=\"position:relative;\"><a href=\"#References\" aria-label=\"References permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>References</h1>\n<ul>\n<li><a href=\"https://betterprogramming.pub/jetpack-compose-custom-themes-b1836877981d\">https://betterprogramming.pub/jetpack-compose-custom-themes-b1836877981d</a></li>\n</ul>","frontmatter":{"title":"Compose 나만의 Custom Theme 설정하기","date":"April 26, 2024","update":"April 26, 2024","tags":["Android","Compose"],"series":"Android"},"fields":{"slug":"/compose-theme/","readingTime":{"minutes":4.98}}},"seriesList":{"edges":[{"node":{"id":"8da53698-7fbf-50de-b57d-674258641696","fields":{"slug":"/android-start/"},"frontmatter":{"title":"첫 안드로이드 개발에 대한 회고"}}},{"node":{"id":"32630555-7ffc-5c77-8e93-41b9441313c7","fields":{"slug":"/lifecycle/"},"frontmatter":{"title":"안드로이드 Lifecycle 제대로 알기"}}},{"node":{"id":"02cd12ae-6f40-58aa-be67-edbe6836235b","fields":{"slug":"/fragment/"},"frontmatter":{"title":"안드로이드 Fragment 사용"}}},{"node":{"id":"351d6f88-b8e1-5a92-8ab2-5a18f816e5f2","fields":{"slug":"/intent/"},"frontmatter":{"title":"안드로이드 인텐트의 개념"}}},{"node":{"id":"584879b5-e89c-570d-9728-e24e7543a406","fields":{"slug":"/android-context/"},"frontmatter":{"title":"안드로이드 Context의 개념"}}},{"node":{"id":"e77807c0-3767-530f-a643-b3c28eead54b","fields":{"slug":"/recyclerview/"},"frontmatter":{"title":"안드로이드 4대 컴포넌트란"}}},{"node":{"id":"7b7ee01b-c911-5343-9957-c4ef27024778","fields":{"slug":"/broadcast/"},"frontmatter":{"title":"안드로이드 브로드캐스트(Broadcast)"}}},{"node":{"id":"df99c5d4-e349-5463-9a5f-c65c2c714a98","fields":{"slug":"/android-service/"},"frontmatter":{"title":"안드로이드 서비스(Service) 개요"}}},{"node":{"id":"c1750e54-c129-5248-b9a4-dc6ead87c256","fields":{"slug":"/pendingintent/"},"frontmatter":{"title":"안드로이드 PendingIntent의 개념"}}},{"node":{"id":"915c5a43-52f4-5d96-9e4b-5dccace98788","fields":{"slug":"/notification/"},"frontmatter":{"title":"안드로이드 알림(Notification) 만들기"}}},{"node":{"id":"ba69adf2-5458-521e-b6eb-85bbad0e6385","fields":{"slug":"/android-jetpack/"},"frontmatter":{"title":"안드로이드 Jetpack에 대해"}}},{"node":{"id":"cc73ab05-b427-563d-82a2-220a8c3fedb6","fields":{"slug":"/android-acc/"},"frontmatter":{"title":"안드로이드 MVVM 패턴과 ACC 알아보기"}}},{"node":{"id":"832ca7b8-20af-5b55-9b16-2610187c24ae","fields":{"slug":"/viewmodel/"},"frontmatter":{"title":"안드로이드 Jetpack의 ViewModel 사용해보기"}}},{"node":{"id":"da0c8a2b-e2de-5ed4-b99f-fdcbcc59ee14","fields":{"slug":"/livedata/"},"frontmatter":{"title":"안드로이드 Jetpack의 LiveData 적용하기"}}},{"node":{"id":"379be128-999b-5d4c-b690-3f2552a189f3","fields":{"slug":"/databinding/"},"frontmatter":{"title":"안드로이드 DataBinding + LiveData 적용하기"}}},{"node":{"id":"f004c3a4-f9d8-509d-ab8f-7ae273cc1f6f","fields":{"slug":"/coroutine/"},"frontmatter":{"title":"안드로이드 코루틴의 기초 알아보기"}}},{"node":{"id":"03b60894-ee1f-5d06-94b7-a41567772d61","fields":{"slug":"/room-database/"},"frontmatter":{"title":"안드로이드 Room 사용하면서 알아보기"}}},{"node":{"id":"7a30a0fa-f5f4-5b2a-9e51-03568d97de6d","fields":{"slug":"/android-dagger2/"},"frontmatter":{"title":"안드로이드 Dagger2 맛보기"}}},{"node":{"id":"793dad13-2ba5-5df0-957c-4763d3df25a2","fields":{"slug":"/android-dagger2-more/"},"frontmatter":{"title":"안드로이드 Dagger2 좀 더 알아가기"}}},{"node":{"id":"e7e7c2d3-ace1-53dc-bd3b-ee4e96ad9b6c","fields":{"slug":"/android-hilt/"},"frontmatter":{"title":"안드로이드 Hilt에 대해 알아보기"}}},{"node":{"id":"fcc174d6-e820-5bfb-8407-5db69e9cff26","fields":{"slug":"/repository-pattern/"},"frontmatter":{"title":"안드로이드 Repository 패턴은 무엇인가"}}},{"node":{"id":"e7993b01-d5c9-5d7b-ac89-de6c6db8a927","fields":{"slug":"/datastore/"},"frontmatter":{"title":"새로운 동료 DataStore 알아보기"}}},{"node":{"id":"9ca4a2fd-2662-5c91-99af-5ddf44fc5fd4","fields":{"slug":"/android-diffutil/"},"frontmatter":{"title":"안드로이드 RecyclerView의 DiffUtil 알아보기"}}},{"node":{"id":"2af94fb4-d2f5-5af1-9f2a-cd678174506d","fields":{"slug":"/viewpager2/"},"frontmatter":{"title":"안드로이드 ViewPager2 사용기"}}},{"node":{"id":"55676805-c6d4-5a07-af82-a6a5239d2384","fields":{"slug":"/runOnUiThread/"},"frontmatter":{"title":"안드로이드 runOnUiThread?"}}},{"node":{"id":"4135a47f-c10c-5535-8b71-3add3f62dd6c","fields":{"slug":"/android-launcher/"},"frontmatter":{"title":"안드로이드에서 Launcher를 통한 결과 전달"}}},{"node":{"id":"3f56723e-63f6-5dd9-b2e2-fe403e99c18b","fields":{"slug":"/android-menu/"},"frontmatter":{"title":"안드로이드 다양한 Menu들 사용하기"}}},{"node":{"id":"e8c7ca90-23b4-5683-a655-90460391cf01","fields":{"slug":"/android-permission/"},"frontmatter":{"title":"안드로이드 Permission 가져오기"}}},{"node":{"id":"b600df71-260c-567f-8ccf-592f16304768","fields":{"slug":"/android-sqlite/"},"frontmatter":{"title":"안드로이드 내부 데이터 저장 SQLite"}}},{"node":{"id":"ad7d73e5-a4b6-5f44-bd0f-867cb4d2e8ae","fields":{"slug":"/android-local-service/"},"frontmatter":{"title":"안드로이드 Local Service 알아보기"}}},{"node":{"id":"e3a294b0-afed-5673-8a7a-0affb6d3dcdc","fields":{"slug":"/android-fragment/"},"frontmatter":{"title":"안드로이드 Fragment 조각내기"}}},{"node":{"id":"52277946-9258-55cd-9361-7b6cd2c26cf6","fields":{"slug":"/livedata-transform/"},"frontmatter":{"title":"안드로이드 MediatorLiveData와 Transformations"}}},{"node":{"id":"26ead8cc-53e7-5fca-8930-d6762ae10124","fields":{"slug":"/android-navigation/"},"frontmatter":{"title":"안드로이드 Navigation 사용하기"}}},{"node":{"id":"abbe933c-9872-5d48-8ef7-04d14e785ccc","fields":{"slug":"/compose-start/"},"frontmatter":{"title":"안드로이드 Compose 알아보기"}}},{"node":{"id":"f2966618-c744-5fb8-b785-3650ebae1072","fields":{"slug":"/compose-lifecycle/"},"frontmatter":{"title":"안드로이드 Compose 수명 주기"}}},{"node":{"id":"a2f497d1-88e4-5dee-b9ef-43228c17b4c3","fields":{"slug":"/compose-state-hoisting/"},"frontmatter":{"title":"안드로이드 Compose 상태 호이스팅"}}},{"node":{"id":"bbef1829-8d9e-589f-b1c8-22945fc1bd11","fields":{"slug":"/compose-side-effect/"},"frontmatter":{"title":"안드로이드 Side Effect란?"}}},{"node":{"id":"75dc9cf5-f813-58b3-b426-c9125325ea76","fields":{"slug":"/android-version-catalog/"},"frontmatter":{"title":"안드로이드 Version Catalog 도입하기"}}},{"node":{"id":"1eaf8bbe-518b-5a56-bd4d-230253d4a1db","fields":{"slug":"/android-webview/"},"frontmatter":{"title":"안드로이드 WebView로 웹과 놀기"}}},{"node":{"id":"bae61635-412c-5e43-8a7b-1eafe2722928","fields":{"slug":"/compose-theme/"},"frontmatter":{"title":"Compose 나만의 Custom Theme 설정하기"}}},{"node":{"id":"28df186b-d648-5562-a726-a8c7350b5a01","fields":{"slug":"/compose-bezier/"},"frontmatter":{"title":"Compose에서 Bezier 곡선으로 스쿼클 만들기"}}},{"node":{"id":"eb0bbfb7-fa8e-53da-b0ad-3b250756090e","fields":{"slug":"/multipart/"},"frontmatter":{"title":"Ktor와 Multipart로 파일 업로드 근데 이제 Ktrofit을 곁들인"}}},{"node":{"id":"c4e9fd73-d14b-5068-9741-133bd0ab6738","fields":{"slug":"/android-scope-storage/"},"frontmatter":{"title":"안드로이드 Scope Storage 사용하기"}}}]},"previous":{"fields":{"slug":"/serialization/"},"frontmatter":{"title":"코틑린을 위한 Kotlinx Serizalization"}},"next":{"fields":{"slug":"/ktor/"},"frontmatter":{"title":"KMP를 지원하는 Ktor Client를 사용해보자"}}},"pageContext":{"id":"bae61635-412c-5e43-8a7b-1eafe2722928","series":"Android","previousPostId":"bca9a285-eca1-55b0-997c-c39c8dd3560b","nextPostId":"64930b29-58b8-57af-b3c0-7b695cd8826b"}},"staticQueryHashes":[],"slicesMap":{}}